/// <reference types="react" />
import { FormAction } from "./formAction.component";
declare const _default: {
    title: string;
    component: typeof FormAction;
    argTypes: {
        onSubmit: {
            action: string;
        };
        type: {
            control: {
                type: string;
            };
        };
        form: {
            control: {
                type: string;
            };
        };
        options: {
            control: {
                type: string;
            };
        };
    };
    parameters: {
        docs: {
            source: {
                type: string;
            };
        };
    };
};
export default _default;
export declare const Sandbox: {
    (args: any): JSX.Element;
    args: {
        actionInfo: {
            name: string;
            title: string;
            description: string;
            priority: number;
            defaults: {
                handler: string[];
                method: string[];
                priority: number;
                name: string;
                title: string;
            };
            access: {
                handler: boolean;
                method: boolean;
            };
            settingsForm: {
                components: ({
                    type: string;
                    input: boolean;
                    key: string;
                    label?: undefined;
                    tree?: undefined;
                    legend?: undefined;
                    components?: undefined;
                    tag?: undefined;
                    content?: undefined;
                    className?: undefined;
                    size?: undefined;
                    leftIcon?: undefined;
                    rightIcon?: undefined;
                    block?: undefined;
                    action?: undefined;
                    disableOnInvalid?: undefined;
                    theme?: undefined;
                } | {
                    type: string;
                    input: boolean;
                    label: string;
                    key: string;
                    tree?: undefined;
                    legend?: undefined;
                    components?: undefined;
                    tag?: undefined;
                    content?: undefined;
                    className?: undefined;
                    size?: undefined;
                    leftIcon?: undefined;
                    rightIcon?: undefined;
                    block?: undefined;
                    action?: undefined;
                    disableOnInvalid?: undefined;
                    theme?: undefined;
                } | {
                    type: string;
                    input: boolean;
                    tree: boolean;
                    legend: string;
                    components: {
                        input: boolean;
                        type: string;
                        key: string;
                        components: {
                            type: string;
                            key: string;
                            title: string;
                            placeholder: string;
                            basePath: string;
                            form: string;
                            required: boolean;
                        }[];
                    }[];
                    key?: undefined;
                    label?: undefined;
                    tag?: undefined;
                    content?: undefined;
                    className?: undefined;
                    size?: undefined;
                    leftIcon?: undefined;
                    rightIcon?: undefined;
                    block?: undefined;
                    action?: undefined;
                    disableOnInvalid?: undefined;
                    theme?: undefined;
                } | {
                    type: string;
                    input: boolean;
                    tree: boolean;
                    key: string;
                    legend: string;
                    components: {
                        type: string;
                        input: boolean;
                        key: string;
                        label: string;
                        placeholder: string;
                        dataSrc: string;
                        data: {
                            json: string;
                        };
                        template: string;
                        valueProperty: string;
                        multiple: boolean;
                    }[];
                    label?: undefined;
                    tag?: undefined;
                    content?: undefined;
                    className?: undefined;
                    size?: undefined;
                    leftIcon?: undefined;
                    rightIcon?: undefined;
                    block?: undefined;
                    action?: undefined;
                    disableOnInvalid?: undefined;
                    theme?: undefined;
                } | {
                    key: string;
                    type: string;
                    input: boolean;
                    tree: boolean;
                    legend: string;
                    components: {
                        type: string;
                        key: string;
                        input: boolean;
                        tree: boolean;
                        components: {
                            key: string;
                            type: string;
                            input: boolean;
                            columns: ({
                                components: ({
                                    type: string;
                                    input: boolean;
                                    label: string;
                                    key: string;
                                    placeholder: string;
                                    template: string;
                                    dataSrc: string;
                                    data: {
                                        json: string;
                                        values?: undefined;
                                        url?: undefined;
                                        resource?: undefined;
                                    };
                                    valueProperty: string;
                                    multiple: boolean;
                                    inputType?: undefined;
                                } | {
                                    type: string;
                                    input: boolean;
                                    label: string;
                                    key: string;
                                    placeholder: string;
                                    template: string;
                                    dataSrc: string;
                                    data: {
                                        values: {
                                            value: string;
                                            label: string;
                                        }[];
                                        json: string;
                                        url: string;
                                        resource: string;
                                    };
                                    valueProperty: string;
                                    multiple: boolean;
                                    inputType?: undefined;
                                } | {
                                    input: boolean;
                                    type: string;
                                    inputType: string;
                                    label: string;
                                    key: string;
                                    placeholder: string;
                                    multiple: boolean;
                                    template?: undefined;
                                    dataSrc?: undefined;
                                    data?: undefined;
                                    valueProperty?: undefined;
                                })[];
                            } | {
                                components: {
                                    key: string;
                                    type: string;
                                    input: boolean;
                                    components: ({
                                        key: string;
                                        type: string;
                                        tag: string;
                                        input: boolean;
                                        content: string;
                                        className: string;
                                        label?: undefined;
                                        editorComponents?: undefined;
                                        placeholder?: undefined;
                                    } | {
                                        label: string;
                                        type: string;
                                        input: boolean;
                                        key: string;
                                        editorComponents: {
                                            label: string;
                                            columns: ({
                                                components: {
                                                    label: string;
                                                    placeholder: string;
                                                    tableView: boolean;
                                                    validate: {
                                                        required: boolean;
                                                        custom: string;
                                                        customPrivate: boolean;
                                                        strictDateValidation: boolean;
                                                        multiple: boolean;
                                                        unique: boolean;
                                                        minLength: string;
                                                        maxLength: string;
                                                        pattern: string;
                                                    };
                                                    key: string;
                                                    type: string;
                                                    input: boolean;
                                                    hideOnChildrenHidden: boolean;
                                                    prefix: string;
                                                    customClass: string;
                                                    suffix: string;
                                                    multiple: boolean;
                                                    defaultValue: any;
                                                    protected: boolean;
                                                    unique: boolean;
                                                    persistent: boolean;
                                                    hidden: boolean;
                                                    clearOnHide: boolean;
                                                    refreshOn: string;
                                                    redrawOn: string;
                                                    modalEdit: boolean;
                                                    labelPosition: string;
                                                    description: string;
                                                    errorLabel: string;
                                                    tooltip: string;
                                                    hideLabel: boolean;
                                                    tabindex: string;
                                                    disabled: boolean;
                                                    autofocus: boolean;
                                                    dbIndex: boolean;
                                                    customDefaultValue: string;
                                                    calculateValue: string;
                                                    calculateServer: boolean;
                                                    widget: {
                                                        type: string;
                                                    };
                                                    attributes: {};
                                                    validateOn: string;
                                                    conditional: {
                                                        show: any;
                                                        when: any;
                                                        eq: string;
                                                    };
                                                    overlay: {
                                                        style: string;
                                                        left: string;
                                                        top: string;
                                                        width: string;
                                                        height: string;
                                                    };
                                                    allowCalculateOverride: boolean;
                                                    encrypted: boolean;
                                                    showCharCount: boolean;
                                                    showWordCount: boolean;
                                                    properties: {};
                                                    allowMultipleMasks: boolean;
                                                    mask: boolean;
                                                    inputType: string;
                                                    inputFormat: string;
                                                    inputMask: string;
                                                    spellcheck: boolean;
                                                    id: string;
                                                }[];
                                                width: number;
                                                offset: number;
                                                push: number;
                                                pull: number;
                                                size: string;
                                            } | {
                                                components: {
                                                    label: string;
                                                    labelPosition: string;
                                                    placeholder: string;
                                                    description: string;
                                                    tooltip: string;
                                                    prefix: string;
                                                    suffix: string;
                                                    widget: {
                                                        type: string;
                                                    };
                                                    inputMask: string;
                                                    allowMultipleMasks: boolean;
                                                    customClass: string;
                                                    tabindex: string;
                                                    autocomplete: string;
                                                    hidden: boolean;
                                                    hideLabel: boolean;
                                                    showWordCount: boolean;
                                                    showCharCount: boolean;
                                                    mask: boolean;
                                                    autofocus: boolean;
                                                    spellcheck: boolean;
                                                    disabled: boolean;
                                                    tableView: boolean;
                                                    modalEdit: boolean;
                                                    multiple: boolean;
                                                    persistent: boolean;
                                                    inputFormat: string;
                                                    protected: boolean;
                                                    dbIndex: boolean;
                                                    case: string;
                                                    encrypted: boolean;
                                                    redrawOn: string;
                                                    clearOnHide: boolean;
                                                    customDefaultValue: string;
                                                    calculateValue: string;
                                                    calculateServer: boolean;
                                                    allowCalculateOverride: boolean;
                                                    validateOn: string;
                                                    validate: {
                                                        required: boolean;
                                                        pattern: string;
                                                        customMessage: string;
                                                        custom: string;
                                                        customPrivate: boolean;
                                                        json: string;
                                                        minLength: string;
                                                        maxLength: string;
                                                        strictDateValidation: boolean;
                                                        multiple: boolean;
                                                        unique: boolean;
                                                    };
                                                    unique: boolean;
                                                    errorLabel: string;
                                                    key: string;
                                                    tags: any[];
                                                    properties: {};
                                                    conditional: {
                                                        show: any;
                                                        when: any;
                                                        eq: string;
                                                        json: string;
                                                    };
                                                    customConditional: string;
                                                    logic: any[];
                                                    attributes: {};
                                                    overlay: {
                                                        style: string;
                                                        page: string;
                                                        left: string;
                                                        top: string;
                                                        width: string;
                                                        height: string;
                                                    };
                                                    type: string;
                                                    input: boolean;
                                                    hideOnChildrenHidden: boolean;
                                                    refreshOn: string;
                                                    inputType: string;
                                                    id: string;
                                                    defaultValue: string;
                                                }[];
                                                width: number;
                                                offset: number;
                                                push: number;
                                                pull: number;
                                                size: string;
                                            } | {
                                                components: {
                                                    label: string;
                                                    widget: string;
                                                    tableView: boolean;
                                                    data: {
                                                        values: {
                                                            label: string;
                                                            value: string;
                                                        }[];
                                                        json: string;
                                                        url: string;
                                                        resource: string;
                                                        custom: string;
                                                    };
                                                    selectThreshold: number;
                                                    key: string;
                                                    type: string;
                                                    indexeddb: {
                                                        filter: {};
                                                    };
                                                    input: boolean;
                                                    hideOnChildrenHidden: boolean;
                                                    defaultValue: string;
                                                    placeholder: string;
                                                    prefix: string;
                                                    customClass: string;
                                                    suffix: string;
                                                    multiple: boolean;
                                                    protected: boolean;
                                                    unique: boolean;
                                                    persistent: boolean;
                                                    hidden: boolean;
                                                    clearOnHide: boolean;
                                                    refreshOn: string;
                                                    redrawOn: string;
                                                    modalEdit: boolean;
                                                    labelPosition: string;
                                                    description: string;
                                                    errorLabel: string;
                                                    tooltip: string;
                                                    hideLabel: boolean;
                                                    tabindex: string;
                                                    disabled: boolean;
                                                    autofocus: boolean;
                                                    dbIndex: boolean;
                                                    customDefaultValue: string;
                                                    calculateValue: string;
                                                    calculateServer: boolean;
                                                    attributes: {};
                                                    validateOn: string;
                                                    validate: {
                                                        required: boolean;
                                                        custom: string;
                                                        customPrivate: boolean;
                                                        strictDateValidation: boolean;
                                                        multiple: boolean;
                                                        unique: boolean;
                                                    };
                                                    conditional: {
                                                        show: any;
                                                        when: any;
                                                        eq: string;
                                                    };
                                                    overlay: {
                                                        style: string;
                                                        left: string;
                                                        top: string;
                                                        width: string;
                                                        height: string;
                                                    };
                                                    allowCalculateOverride: boolean;
                                                    encrypted: boolean;
                                                    showCharCount: boolean;
                                                    showWordCount: boolean;
                                                    properties: {};
                                                    allowMultipleMasks: boolean;
                                                    idPath: string;
                                                    clearOnRefresh: boolean;
                                                    limit: number;
                                                    dataSrc: string;
                                                    valueProperty: string;
                                                    lazyLoad: boolean;
                                                    filter: string;
                                                    searchEnabled: boolean;
                                                    searchField: string;
                                                    minSearch: number;
                                                    readOnlyValue: boolean;
                                                    authenticate: boolean;
                                                    template: string;
                                                    selectFields: string;
                                                    searchThreshold: number;
                                                    uniqueOptions: boolean;
                                                    fuseOptions: {
                                                        include: string;
                                                        threshold: number;
                                                    };
                                                    customOptions: {};
                                                    useExactSearch: boolean;
                                                    id: string;
                                                }[];
                                                size: string;
                                                width: number;
                                                offset: number;
                                                push: number;
                                                pull: number;
                                            } | {
                                                components: {
                                                    label: string;
                                                    labelPosition: string;
                                                    placeholder: string;
                                                    description: string;
                                                    tooltip: string;
                                                    customClass: string;
                                                    tabindex: string;
                                                    hidden: boolean;
                                                    hideLabel: boolean;
                                                    autofocus: boolean;
                                                    disabled: boolean;
                                                    tableView: boolean;
                                                    modalEdit: boolean;
                                                    delimeter: string;
                                                    maxTags: number;
                                                    storeas: string;
                                                    persistent: boolean;
                                                    protected: boolean;
                                                    dbIndex: boolean;
                                                    encrypted: boolean;
                                                    redrawOn: string;
                                                    clearOnHide: boolean;
                                                    customDefaultValue: string;
                                                    calculateValue: string;
                                                    calculateServer: boolean;
                                                    allowCalculateOverride: boolean;
                                                    validate: {
                                                        required: boolean;
                                                        customMessage: string;
                                                        custom: string;
                                                        customPrivate: boolean;
                                                        json: string;
                                                        strictDateValidation: boolean;
                                                        multiple: boolean;
                                                        unique: boolean;
                                                    };
                                                    unique: boolean;
                                                    validateOn: string;
                                                    errorLabel: string;
                                                    key: string;
                                                    tags: any[];
                                                    properties: {};
                                                    conditional: {
                                                        show: any;
                                                        when: any;
                                                        eq: string;
                                                        json: string;
                                                    };
                                                    customConditional: string;
                                                    logic: any[];
                                                    attributes: {};
                                                    overlay: {
                                                        style: string;
                                                        page: string;
                                                        left: string;
                                                        top: string;
                                                        width: string;
                                                        height: string;
                                                    };
                                                    type: string;
                                                    input: boolean;
                                                    prefix: string;
                                                    suffix: string;
                                                    multiple: boolean;
                                                    refreshOn: string;
                                                    widget: {
                                                        type: string;
                                                    };
                                                    showCharCount: boolean;
                                                    showWordCount: boolean;
                                                    allowMultipleMasks: boolean;
                                                    id: string;
                                                    hideOnChildrenHidden: boolean;
                                                    defaultValue: any;
                                                }[];
                                                size: string;
                                                width: number;
                                                offset: number;
                                                push: number;
                                                pull: number;
                                            })[];
                                            autoAdjust: boolean;
                                            hideOnChildrenHidden: boolean;
                                            customClass: string;
                                            hidden: boolean;
                                            hideLabel: boolean;
                                            modalEdit: boolean;
                                            key: string;
                                            tags: any[];
                                            properties: {};
                                            conditional: {
                                                show: any;
                                                when: any;
                                                eq: string;
                                                json: string;
                                            };
                                            customConditional: string;
                                            logic: any[];
                                            attributes: {};
                                            overlay: {
                                                style: string;
                                                page: string;
                                                left: string;
                                                top: string;
                                                width: string;
                                                height: string;
                                            };
                                            type: string;
                                            input: boolean;
                                            tableView: boolean;
                                            placeholder: string;
                                            prefix: string;
                                            suffix: string;
                                            multiple: boolean;
                                            defaultValue: any;
                                            protected: boolean;
                                            unique: boolean;
                                            persistent: boolean;
                                            clearOnHide: boolean;
                                            refreshOn: string;
                                            redrawOn: string;
                                            labelPosition: string;
                                            description: string;
                                            errorLabel: string;
                                            tooltip: string;
                                            tabindex: string;
                                            disabled: boolean;
                                            autofocus: boolean;
                                            dbIndex: boolean;
                                            customDefaultValue: string;
                                            calculateValue: string;
                                            calculateServer: boolean;
                                            widget: any;
                                            validateOn: string;
                                            validate: {
                                                required: boolean;
                                                custom: string;
                                                customPrivate: boolean;
                                                strictDateValidation: boolean;
                                                multiple: boolean;
                                                unique: boolean;
                                            };
                                            allowCalculateOverride: boolean;
                                            encrypted: boolean;
                                            showCharCount: boolean;
                                            showWordCount: boolean;
                                            allowMultipleMasks: boolean;
                                            tree: boolean;
                                            id: string;
                                        }[];
                                        placeholder: string;
                                        tag?: undefined;
                                        content?: undefined;
                                        className?: undefined;
                                    })[];
                                }[];
                            })[];
                        }[];
                    }[];
                    label?: undefined;
                    tag?: undefined;
                    content?: undefined;
                    className?: undefined;
                    size?: undefined;
                    leftIcon?: undefined;
                    rightIcon?: undefined;
                    block?: undefined;
                    action?: undefined;
                    disableOnInvalid?: undefined;
                    theme?: undefined;
                } | {
                    key: string;
                    type: string;
                    tag: string;
                    input: boolean;
                    content: string;
                    className: string;
                    label?: undefined;
                    tree?: undefined;
                    legend?: undefined;
                    components?: undefined;
                    size?: undefined;
                    leftIcon?: undefined;
                    rightIcon?: undefined;
                    block?: undefined;
                    action?: undefined;
                    disableOnInvalid?: undefined;
                    theme?: undefined;
                } | {
                    type: string;
                    input: boolean;
                    label: string;
                    key: string;
                    size: string;
                    leftIcon: string;
                    rightIcon: string;
                    block: boolean;
                    action: string;
                    disableOnInvalid: boolean;
                    theme: string;
                    tree?: undefined;
                    legend?: undefined;
                    components?: undefined;
                    tag?: undefined;
                    content?: undefined;
                    className?: undefined;
                })[];
                action: string;
            };
        };
        options: {
            template: string;
            iconset: string;
        };
    };
};
