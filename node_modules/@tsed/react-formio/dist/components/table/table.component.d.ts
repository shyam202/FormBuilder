import React, { PropsWithChildren } from "react";
import { CellProps, FilterProps, Renderer, TableOptions } from "react-table";
import { OnClickOperation, Operation, QueryOptions } from "../../interfaces";
import { DefaultCellHeaderProps } from "./components/defaultCellHeader.component";
export interface TableProps<Data extends Record<string, unknown> = {}> extends TableOptions<Data>, Partial<QueryOptions> {
    className?: string;
    /**
     * Call the listener when a filter / pagination  / sort change.
     */
    onChange?: (query: QueryOptions) => void;
    /**
     * Call the listener when a line is clicked.
     */
    onClick?: OnClickOperation<Data>;
    /**
     * Pagination steps list
     */
    pageSizes?: number[];
    /**
     *
     */
    isLoading?: boolean;
    /**
     * Custom EmptyData displayed when there is no data
     */
    EmptyData?: React.ComponentType;
    /**
     * Custom ArrowSort
     */
    ArrowSort?: React.ComponentType;
    /**
     * Custom default ColumnFilter
     */
    ColumnFilter?: Renderer<FilterProps<Data>>;
    /**
     * Custom cell
     */
    Cell?: React.ComponentType<CellProps<Data>>;
    /**
     *
     */
    CellHeader?: React.ComponentType<DefaultCellHeaderProps<Data>>;
    /**
     *
     */
    CellOperations?: React.ComponentType;
    /**
     * Custom Loader
     */
    Loader?: React.ComponentType;
    /**
     * Custom Loader
     */
    Pagination?: React.ComponentType;
    /**
     * Disable filters
     */
    disableFilters?: boolean;
    /**
     * Disable pagination
     */
    disablePagination?: boolean;
    /**
     * Configuration operation for each line.
     */
    operations?: Operation[];
    i18n?: (f: string) => string;
}
export declare function Table<Data extends Record<string, unknown>>(props: PropsWithChildren<TableProps<Data>>): JSX.Element;
