{"version":3,"file":"index.modern.js","sources":["../src/combine.ts","../src/createReducer.ts","../src/createAction.ts"],"sourcesContent":["import { ReduceFunction } from \"./createReducer\";\n\nexport function combine(\n  ...args: ReduceFunction[]\n): Record<string, ReduceFunction> {\n  return args.reduce((reducers: any, reduce: ReduceFunction) => {\n    return {\n      ...reducers,\n      [reduce.toString()]: reduce\n    };\n  }, {});\n}\n","export interface ReducerEvent<Payload = any> {\n  type: string;\n  name: string;\n  payload?: Payload;\n}\n\nexport interface ReduceFunction<State = any, Payload = any> {\n  (state: State, event: ReducerEvent<Payload>): State;\n\n  $emit(\n    type: string | { toString(): string },\n    state: State,\n    payload: Payload\n  ): State;\n\n  toString(): string;\n}\n\nexport type InitialStateCreator<State = any> = (\n  state?: Partial<State> | any\n) => State;\n\nexport type Reducer<State = any, Payload = any> = (\n  state: State,\n  payload: Payload,\n  reset: InitialStateCreator<State>\n) => State;\n\nexport type Reducers<State = any, Payload = any> = Record<\n  string,\n  Reducer<State, Payload>\n>;\n\nexport interface On<State = any, Payload = any> {\n  (name: string | { toString(): string }, reducer: Reducer<State, Payload>): On<\n    State,\n    Payload\n  >;\n}\n\nexport interface ReducersCreator<State = any, Payload = any> {\n  (on: On<State, Payload>): void;\n}\n\nexport interface SandboxReducers<State = any, Payload = any> {\n  (\n    reducerName: string | { toString(): string },\n    defaultStateOptions?: Partial<State>\n  ): ReduceFunction<State, Payload>;\n\n  on(\n    name: string | { toString(): string },\n    reducer: Reducer<State, Payload>\n  ): SandboxReducers<State, Payload>;\n}\n/**\n * Create a new Reducer\n * @param createInitialState\n * @param reducers\n */\nexport function createReducer<State = any, Payload = any>(\n  reducers: Reducers<State, Payload> | ReducersCreator,\n  createInitialState: InitialStateCreator\n): SandboxReducers {\n  if (typeof reducers === \"function\") {\n    const localReducers: Reducers<State, Payload> = {};\n\n    const on: On<State, Payload> = (name, reducer) => {\n      localReducers[String(name)] = reducer;\n      return on;\n    };\n\n    reducers(on);\n\n    return createReducer<State, Payload>(localReducers, createInitialState);\n  }\n\n  const sandboxReducers = (\n    reducerName: string | { toString(): string },\n    defaultStateOptions?: any\n  ): ReduceFunction<State, Payload> => {\n    const name = String(reducerName);\n    const initialState: State & { name: string } = {\n      name,\n      ...createInitialState(defaultStateOptions)\n    };\n\n    const reduce = (\n      state: State = initialState,\n      event: ReducerEvent\n    ): State => {\n      const { type, name: actionName, payload } = event;\n\n      if (actionName !== name) {\n        return state;\n      }\n\n      if (reducers[type]) {\n        return reduce.$emit(type, state, payload);\n      }\n\n      if (reducers.default) {\n        return reduce.$emit(\"default\", state, payload);\n      }\n\n      return state;\n    };\n\n    reduce.$emit = (type: string, state: State, payload: any): State => {\n      return {\n        ...reducers[type](state, payload, () =>\n          createInitialState(defaultStateOptions)\n        ),\n        name\n      };\n    };\n\n    reduce.toString = (): string => name;\n\n    return reduce as any;\n  };\n\n  sandboxReducers.on = (\n    name: string | { toString(): string },\n    reducer: Reducer<State, Payload>\n  ): SandboxReducers => {\n    reducers[String(name)] = reducer;\n\n    return sandboxReducers;\n  };\n\n  return sandboxReducers;\n}\n","let AUTO_INC = 0;\n\nexport interface CreateActionOptions {\n  type?: string;\n  mapper?: (...args: any[]) => any;\n}\n\nfunction getActionType(): string {\n  return `ACTION:${AUTO_INC++}`;\n}\n\nexport interface ActionReducer<T = any> {\n  (name: string, payload?: T, ...args: any[]): {\n    type: string;\n    name: string;\n    payload: T;\n  };\n  toString(): string;\n}\n\nexport function createAction<T = any>(\n  options: CreateActionOptions = {}\n): ActionReducer {\n  const { type = getActionType(), mapper = (f: any): any => f } = options;\n\n  const action = (\n    name: string,\n    payload?: T,\n    ...args: any[]\n  ): { type: string; name: string; payload: T } => ({\n    type,\n    name,\n    payload: mapper(payload, ...args)\n  });\n\n  action.toString = (): string => type;\n\n  return action;\n}\n"],"names":["combine","args","reduce","reducers","toString","createReducer","createInitialState","localReducers","on","name","reducer","String","sandboxReducers","reducerName","defaultStateOptions","initialState","state","event","type","actionName","payload","$emit","default","AUTO_INC","getActionType","createAction","options","mapper","f","action"],"mappings":"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"}