[{"C:\\Users\\ShyamLakhani\\Desktop\\my-app\\src\\index.js":"1","C:\\Users\\ShyamLakhani\\Desktop\\my-app\\src\\App.js":"2","C:\\Users\\ShyamLakhani\\Desktop\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\ShyamLakhani\\Desktop\\my-app\\src\\pages\\Form.js":"4","C:\\Users\\ShyamLakhani\\Desktop\\my-app\\src\\components\\Navbar.js":"5"},{"size":233,"mtime":1625698344981,"results":"6","hashOfConfig":"7"},{"size":387,"mtime":1625698293891,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":1162,"mtime":1625698253093,"results":"10","hashOfConfig":"7"},{"size":5718,"mtime":1625699081112,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ap6or4",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\ShyamLakhani\\Desktop\\my-app\\src\\index.js",[],["24","25"],"C:\\Users\\ShyamLakhani\\Desktop\\my-app\\src\\App.js",[],"C:\\Users\\ShyamLakhani\\Desktop\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\ShyamLakhani\\Desktop\\my-app\\src\\pages\\Form.js",[],"C:\\Users\\ShyamLakhani\\Desktop\\my-app\\src\\components\\Navbar.js",["26"],"import React from 'react';\r\nimport { AppBar, Toolbar, IconButton,Typography, makeStyles, useTheme, List, Drawer,Divider} from '@material-ui/core';\r\nimport Menu from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport clsx from 'clsx';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ToysIcon from '@material-ui/icons/Toys';\r\n\r\nconst drawerWidth = 240;\r\n\r\n  const useStyles = makeStyles((theme)=>({\r\n    root: {\r\n      display:\"flex\",\r\n    },\r\n\r\n    menu:{\r\n      fontSize: 35,   \r\n      color:\"#808080\",\r\n    },\r\n\r\n    appBar: {\r\n      backgroundColor:\"#000000\",\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n\r\n    type:{\r\n      fontSize: 25, letterSpacing: 2, fontWeight:\"bold\", margin:\"auto\",\r\n    },\r\n\r\n    listItemText:{\r\n      color:\"#4BC676\",\r\n      fontSize:'2rem',\r\n      fontWeight:\"bold\",\r\n      letterSpacing: 2,\r\n    },\r\n\r\n    drawerOpen: {\r\n      backgroundColor:\"#000000\",\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n\r\n    drawer: {\r\n      backgroundColor:\"#000000\",\r\n      color:\"#ffffff\",\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n\r\n    drawerClose: {\r\n      backgroundColor:\"#000000\",\r\n      \r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n\r\n    toolbar: {\r\n      \r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n\r\n  }));\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return(\r\n    <div className=\"Navbar\">\r\n      <AppBar position=\"sticky\" className={classes.header} className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}>\r\n        <Toolbar>\r\n          <IconButton aria-label=\"open drawer\" color=\"inherit\"  onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}>\r\n            <Menu className={classes.menu}  />\r\n          </IconButton>\r\n          <Typography variant=\"h5\" className={classes.type}>FORM BUILDER</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <CloseIcon className={classes.menu}/> : <CloseIcon className={classes.menu}/>}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <div className={classes.list}>\r\n        <List>\r\n          {['Dashboard', 'Calender'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <DashboardIcon className={classes.menu} /> : < DateRangeIcon className={classes.menu}/> }</ListItemIcon>\r\n              <ListItemText classes={{primary:classes.listItemText}} primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['Teams', 'Fan'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? < PeopleIcon className={classes.menu} /> : <ToysIcon className={classes.menu}/>}</ListItemIcon>\r\n              <ListItemText classes={{primary:classes.listItemText}} primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <List>\r\n          {['Cog', 'Person'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? < SettingsIcon className={classes.menu} /> : <PersonIcon className={classes.menu}/>}</ListItemIcon>\r\n              <ListItemText classes={{primary:classes.listItemText}} primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        </div>\r\n      </Drawer>      \r\n    </div>\r\n  )\r\n}",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":114,"column":60,"nodeType":"33","messageId":"34","endLine":116,"endColumn":12},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation"]