{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nvar _xhr = _interopRequireDefault(require(\"./xhr\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar s3 = function s3(formio) {\n  return {\n    uploadFile: function uploadFile(file, fileName, dir, progressCallback, url, options, fileKey, groupPermissions, groupId, abortCallback) {\n      return _xhr.default.upload(formio, 's3', function (xhr, response) {\n        response.data.fileName = fileName;\n        response.data.key = _xhr.default.path([response.data.key, dir, fileName]);\n\n        if (response.signed) {\n          xhr.openAndSetHeaders('PUT', response.signed);\n          xhr.setRequestHeader('Content-Type', file.type);\n          return file;\n        } else {\n          var fd = new FormData();\n\n          for (var key in response.data) {\n            fd.append(key, response.data[key]);\n          }\n\n          fd.append('file', file);\n          xhr.openAndSetHeaders('POST', response.url);\n          return fd;\n        }\n      }, file, fileName, dir, progressCallback, groupPermissions, groupId, abortCallback).then(function (response) {\n        return {\n          storage: 's3',\n          name: fileName,\n          bucket: response.bucket,\n          key: response.data.key,\n          url: _xhr.default.path([response.url, response.data.key]),\n          acl: response.data.acl,\n          size: file.size,\n          type: file.type\n        };\n      });\n    },\n    downloadFile: function downloadFile(file) {\n      if (file.acl !== 'public-read') {\n        return formio.makeRequest('file', \"\".concat(formio.formUrl, \"/storage/s3?bucket=\").concat(_xhr.default.trim(file.bucket), \"&key=\").concat(_xhr.default.trim(file.key)), 'GET');\n      } else {\n        return _nativePromiseOnly.default.resolve(file);\n      }\n    }\n  };\n};\n\ns3.title = 'S3';\nvar _default = s3;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ShyamLakhani/Desktop/my-app/node_modules/formiojs/providers/storage/s3.js"],"names":["Object","defineProperty","exports","value","default","_nativePromiseOnly","_interopRequireDefault","require","_xhr","obj","__esModule","s3","formio","uploadFile","file","fileName","dir","progressCallback","url","options","fileKey","groupPermissions","groupId","abortCallback","upload","xhr","response","data","key","path","signed","openAndSetHeaders","setRequestHeader","type","fd","FormData","append","then","storage","name","bucket","acl","size","downloadFile","makeRequest","concat","formUrl","trim","resolve","title","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/es.string.trim.js\");\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nvar _xhr = _interopRequireDefault(require(\"./xhr\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar s3 = function s3(formio) {\n  return {\n    uploadFile: function uploadFile(file, fileName, dir, progressCallback, url, options, fileKey, groupPermissions, groupId, abortCallback) {\n      return _xhr.default.upload(formio, 's3', function (xhr, response) {\n        response.data.fileName = fileName;\n        response.data.key = _xhr.default.path([response.data.key, dir, fileName]);\n\n        if (response.signed) {\n          xhr.openAndSetHeaders('PUT', response.signed);\n          xhr.setRequestHeader('Content-Type', file.type);\n          return file;\n        } else {\n          var fd = new FormData();\n\n          for (var key in response.data) {\n            fd.append(key, response.data[key]);\n          }\n\n          fd.append('file', file);\n          xhr.openAndSetHeaders('POST', response.url);\n          return fd;\n        }\n      }, file, fileName, dir, progressCallback, groupPermissions, groupId, abortCallback).then(function (response) {\n        return {\n          storage: 's3',\n          name: fileName,\n          bucket: response.bucket,\n          key: response.data.key,\n          url: _xhr.default.path([response.url, response.data.key]),\n          acl: response.data.acl,\n          size: file.size,\n          type: file.type\n        };\n      });\n    },\n    downloadFile: function downloadFile(file) {\n      if (file.acl !== 'public-read') {\n        return formio.makeRequest('file', \"\".concat(formio.formUrl, \"/storage/s3?bucket=\").concat(_xhr.default.trim(file.bucket), \"&key=\").concat(_xhr.default.trim(file.key)), 'GET');\n      } else {\n        return _nativePromiseOnly.default.resolve(file);\n      }\n    }\n  };\n};\n\ns3.title = 'S3';\nvar _default = s3;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}