{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = [{\n  type: 'select',\n  input: true,\n  key: 'displayInTimezone',\n  label: 'Display in Timezone',\n  tooltip: 'This will display the captured date time in the select timezone.',\n  weight: 30,\n  defaultValue: 'viewer',\n  dataSrc: 'values',\n  data: {\n    values: [{\n      label: 'of Viewer',\n      value: 'viewer'\n    }, {\n      label: 'of Submission',\n      value: 'submission'\n    }, {\n      label: 'of Location',\n      value: 'location'\n    }, {\n      label: 'UTC',\n      value: 'utc'\n    }]\n  }\n}, {\n  type: 'select',\n  input: true,\n  key: 'timezone',\n  label: 'Select Timezone',\n  tooltip: 'Select the timezone you wish to display this Date',\n  weight: 31,\n  lazyLoad: true,\n  defaultValue: '',\n  valueProperty: 'name',\n  dataSrc: 'url',\n  data: {\n    url: 'https://cdn.form.io/timezones.json'\n  },\n  template: '<span>{{ item.label }}</span>',\n  conditional: {\n    json: {\n      '===': [{\n        var: 'data.displayInTimezone'\n      }, 'location']\n    }\n  }\n}, {\n  type: 'checkbox',\n  input: true,\n  key: 'useLocaleSettings',\n  label: 'Use Locale Settings',\n  tooltip: 'Use locale settings to display date and time.',\n  weight: 51\n}, {\n  type: 'checkbox',\n  input: true,\n  key: 'allowInput',\n  label: 'Allow Manual Input',\n  tooltip: 'Check this if you would like to allow the user to manually enter in the date.',\n  weight: 51\n}, {\n  type: 'textfield',\n  input: true,\n  key: 'format',\n  label: 'Format',\n  placeholder: 'Format',\n  description: 'Use formats provided by <a href=\"https://github.com/angular-ui/bootstrap/tree/master/src/dateparser/docs#uibdateparsers-format-codes\" target=\"_blank\">DateParser Codes</a>',\n  tooltip: 'The date format for displaying the datetime value.',\n  weight: 52\n}, {\n  type: 'editgrid',\n  input: true,\n  key: 'shortcutButtons',\n  label: 'Shortcut Buttons',\n  description: 'You can specify few buttons which will be shown above the calendar. Use Label to specify the name of the button and onClick to specify which date/time will be set when user clicks the button. E.g, date = new Date()',\n  templates: {\n    header: '<div class=\"row\">\\n  <div class=\"col-sm-3\">Label</div>\\n  <div class=\"col-sm-6\">onClick</div>\\n</div>',\n    row: '<div class=\"row\">\\n      <div class=\"col-sm-3\">\\n        {{ flattenedComponents.label.getView(row.label) }}\\n      </div>\\n      <div class=\"col-sm-6\">\\n        {{ flattenedComponents.onClick.getView(row.onClick) }}\\n      </div>\\n      {% if (!instance.disabled) { %}\\n        <div class=\"col-sm-3\">\\n          <div class=\"btn-group pull-right\">\\n            <button class=\"btn btn-default btn-light btn-sm editRow\"><i class=\"{{ iconClass(\"edit\") }}\"></i></button>\\n            {% if (!instance.hasRemoveButtons || instance.hasRemoveButtons()) { %}\\n              <button class=\"btn btn-danger btn-sm removeRow\"><i class=\"{{ iconClass(\"trash\") }}\"></i></button>\\n            {% } %}\\n          </div>\\n        </div>\\n      {% } %}\\n    </div>'\n  },\n  components: [{\n    label: 'Label',\n    key: 'label',\n    type: 'textfield',\n    input: true,\n    validate: {\n      required: true\n    }\n  }, {\n    label: 'onClick',\n    key: 'onClick',\n    type: 'textarea',\n    editor: 'ace',\n    input: true,\n    validate: {\n      required: true\n    }\n  }],\n  defaultValue: []\n}];\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ShyamLakhani/Desktop/my-app/node_modules/formiojs/components/datetime/editForm/DateTime.edit.display.js"],"names":["Object","defineProperty","exports","value","default","_default","type","input","key","label","tooltip","weight","defaultValue","dataSrc","data","values","lazyLoad","valueProperty","url","template","conditional","json","var","placeholder","description","templates","header","row","components","validate","required","editor"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = [{\n  type: 'select',\n  input: true,\n  key: 'displayInTimezone',\n  label: 'Display in Timezone',\n  tooltip: 'This will display the captured date time in the select timezone.',\n  weight: 30,\n  defaultValue: 'viewer',\n  dataSrc: 'values',\n  data: {\n    values: [{\n      label: 'of Viewer',\n      value: 'viewer'\n    }, {\n      label: 'of Submission',\n      value: 'submission'\n    }, {\n      label: 'of Location',\n      value: 'location'\n    }, {\n      label: 'UTC',\n      value: 'utc'\n    }]\n  }\n}, {\n  type: 'select',\n  input: true,\n  key: 'timezone',\n  label: 'Select Timezone',\n  tooltip: 'Select the timezone you wish to display this Date',\n  weight: 31,\n  lazyLoad: true,\n  defaultValue: '',\n  valueProperty: 'name',\n  dataSrc: 'url',\n  data: {\n    url: 'https://cdn.form.io/timezones.json'\n  },\n  template: '<span>{{ item.label }}</span>',\n  conditional: {\n    json: {\n      '===': [{\n        var: 'data.displayInTimezone'\n      }, 'location']\n    }\n  }\n}, {\n  type: 'checkbox',\n  input: true,\n  key: 'useLocaleSettings',\n  label: 'Use Locale Settings',\n  tooltip: 'Use locale settings to display date and time.',\n  weight: 51\n}, {\n  type: 'checkbox',\n  input: true,\n  key: 'allowInput',\n  label: 'Allow Manual Input',\n  tooltip: 'Check this if you would like to allow the user to manually enter in the date.',\n  weight: 51\n}, {\n  type: 'textfield',\n  input: true,\n  key: 'format',\n  label: 'Format',\n  placeholder: 'Format',\n  description: 'Use formats provided by <a href=\"https://github.com/angular-ui/bootstrap/tree/master/src/dateparser/docs#uibdateparsers-format-codes\" target=\"_blank\">DateParser Codes</a>',\n  tooltip: 'The date format for displaying the datetime value.',\n  weight: 52\n}, {\n  type: 'editgrid',\n  input: true,\n  key: 'shortcutButtons',\n  label: 'Shortcut Buttons',\n  description: 'You can specify few buttons which will be shown above the calendar. Use Label to specify the name of the button and onClick to specify which date/time will be set when user clicks the button. E.g, date = new Date()',\n  templates: {\n    header: '<div class=\"row\">\\n  <div class=\"col-sm-3\">Label</div>\\n  <div class=\"col-sm-6\">onClick</div>\\n</div>',\n    row: '<div class=\"row\">\\n      <div class=\"col-sm-3\">\\n        {{ flattenedComponents.label.getView(row.label) }}\\n      </div>\\n      <div class=\"col-sm-6\">\\n        {{ flattenedComponents.onClick.getView(row.onClick) }}\\n      </div>\\n      {% if (!instance.disabled) { %}\\n        <div class=\"col-sm-3\">\\n          <div class=\"btn-group pull-right\">\\n            <button class=\"btn btn-default btn-light btn-sm editRow\"><i class=\"{{ iconClass(\"edit\") }}\"></i></button>\\n            {% if (!instance.hasRemoveButtons || instance.hasRemoveButtons()) { %}\\n              <button class=\"btn btn-danger btn-sm removeRow\"><i class=\"{{ iconClass(\"trash\") }}\"></i></button>\\n            {% } %}\\n          </div>\\n        </div>\\n      {% } %}\\n    </div>'\n  },\n  components: [{\n    label: 'Label',\n    key: 'label',\n    type: 'textfield',\n    input: true,\n    validate: {\n      required: true\n    }\n  }, {\n    label: 'onClick',\n    key: 'onClick',\n    type: 'textarea',\n    editor: 'ace',\n    input: true,\n    validate: {\n      required: true\n    }\n  }],\n  defaultValue: []\n}];\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}