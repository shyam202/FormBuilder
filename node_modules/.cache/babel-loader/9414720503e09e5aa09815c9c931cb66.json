{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ShyamLakhani\\\\Desktop\\\\my-app\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// // ICONS\n// import * as FaIcons from \"react-icons/fa\"; //Now i get access to all the icons\n// import * as AiIcons from \"react-icons/ai\";\n// import { IconContext } from \"react-icons\";\n// // ROUTING\n// import { Link } from \"react-router-dom\";\n// // DATA FILE\n// import { SidebarData } from \"./SidebarData\";\n// // STYLES\n// import \"./Navbar.css\";\n// export default function Navbar() {\n//   const [sidebar, setSidebar] = useState(false);\n//   const showSidebar = () => setSidebar(!sidebar);\n//   return (\n//     <>\n//       <IconContext.Provider value={{ color: \"#FFF\" }}>\n//         {/* All the icons now are white */}\n//         <div className=\"navbar\">\n//           <Link to=\"#\" className=\"menu-bars\">\n//             <FaIcons.FaBars onClick={showSidebar} />\n//           </Link>\n//         </div>\n//         <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\n//           <ul className=\"nav-menu-items\" onClick={showSidebar}>\n//             <li className=\"navbar-toggle\">\n//               <Link to=\"#\" className=\"menu-bars\">\n//                 <AiIcons.AiOutlineClose />\n//               </Link>\n//             </li>\n//             {SidebarData.map((item, index) => {\n//               return (\n//                 <li key={index} className={item.cName}>\n//                   <Link to={item.path}>\n//                     {item.icon}\n//                     <span>{item.title}</span>\n//                   </Link>\n//                 </li>\n//               );\n//             })}\n//           </ul>\n//         </nav>\n//       </IconContext.Provider>\n//     </>\n//   );\n// }\nimport React from 'react';\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles, useTheme, List, Drawer, Divider } from '@material-ui/core';\nimport Menu from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport clsx from 'clsx';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  menu: {\n    fontSize: 35,\n    color: \"#808080\"\n  },\n  appBar: {\n    backgroundColor: \"#000000\",\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  type: {\n    fontSize: 25,\n    letterSpacing: 2,\n    fontWeight: \"bold\",\n    margin: \"auto\"\n  },\n  list: {\n    color: \"#4BC676\"\n  },\n  drawerOpen: {\n    backgroundColor: \"#000000\",\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawer: {\n    backgroundColor: \"#000000\",\n    color: \"#ffffff\",\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap'\n  },\n  drawerClose: {\n    backgroundColor: \"#000000\",\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  toolbar: {\n    fontSize: 35,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  }\n}));\nexport default function Navbar() {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Navbar\",\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"sticky\",\n      className: classes.header,\n      className: clsx(classes.appBar, {\n        [classes.appBarShift]: open\n      }),\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"open drawer\",\n          color: \"inherit\",\n          onClick: handleDrawerOpen,\n          edge: \"start\",\n          className: clsx(classes.menuButton, {\n            [classes.hide]: open\n          }),\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            className: classes.menu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          className: classes.type,\n          children: \"FORM BUILDER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      className: clsx(classes.drawer, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open\n      }),\n      classes: {\n        paper: clsx({\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open\n        })\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbar,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(CloseIcon, {\n            className: classes.menu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(CloseIcon, {\n            className: classes.menu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.list,\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          children: ['Dashboard', 'Calender'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(DashboardIcon, {\n                className: classes.menu\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 48\n              }, this) : /*#__PURE__*/_jsxDEV(DateRangeIcon, {\n                className: classes.menu\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 93\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, text, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: ['Teams', 'Person'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(PeopleIcon, {\n                className: classes.menu\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 48\n              }, this) : /*#__PURE__*/_jsxDEV(PersonIcon, {\n                className: classes.menu\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 91\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, text, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Navbar, \"Adchr2xZCpHvRdMq2Jjo+bPE43s=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/ShyamLakhani/Desktop/my-app/src/components/Navbar.js"],"names":["React","AppBar","Toolbar","IconButton","Typography","makeStyles","useTheme","List","Drawer","Divider","Menu","CloseIcon","ChevronRightIcon","clsx","ListItem","ListItemIcon","ListItemText","DashboardIcon","DateRangeIcon","PeopleIcon","PersonIcon","drawerWidth","useStyles","theme","root","display","menu","fontSize","color","appBar","backgroundColor","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","type","letterSpacing","fontWeight","margin","list","drawerOpen","flexShrink","whiteSpace","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","Navbar","classes","open","setOpen","useState","handleDrawerOpen","handleDrawerClose","header","menuButton","hide","paper","direction","map","text","index"],"mappings":"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","sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// // ICONS\r\n// import * as FaIcons from \"react-icons/fa\"; //Now i get access to all the icons\r\n// import * as AiIcons from \"react-icons/ai\";\r\n\r\n// import { IconContext } from \"react-icons\";\r\n\r\n// // ROUTING\r\n\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// // DATA FILE\r\n// import { SidebarData } from \"./SidebarData\";\r\n\r\n// // STYLES\r\n// import \"./Navbar.css\";\r\n\r\n// export default function Navbar() {\r\n//   const [sidebar, setSidebar] = useState(false);\r\n\r\n//   const showSidebar = () => setSidebar(!sidebar);\r\n\r\n//   return (\r\n//     <>\r\n//       <IconContext.Provider value={{ color: \"#FFF\" }}>\r\n//         {/* All the icons now are white */}\r\n//         <div className=\"navbar\">\r\n//           <Link to=\"#\" className=\"menu-bars\">\r\n//             <FaIcons.FaBars onClick={showSidebar} />\r\n//           </Link>\r\n//         </div>\r\n//         <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\r\n//           <ul className=\"nav-menu-items\" onClick={showSidebar}>\r\n//             <li className=\"navbar-toggle\">\r\n//               <Link to=\"#\" className=\"menu-bars\">\r\n//                 <AiIcons.AiOutlineClose />\r\n//               </Link>\r\n//             </li>\r\n\r\n//             {SidebarData.map((item, index) => {\r\n//               return (\r\n//                 <li key={index} className={item.cName}>\r\n//                   <Link to={item.path}>\r\n//                     {item.icon}\r\n//                     <span>{item.title}</span>\r\n//                   </Link>\r\n//                 </li>\r\n//               );\r\n//             })}\r\n//           </ul>\r\n//         </nav>\r\n//       </IconContext.Provider>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n\r\nimport React from 'react';\r\nimport { AppBar, Toolbar, IconButton,Typography, makeStyles, useTheme, List, Drawer,Divider} from '@material-ui/core';\r\nimport Menu from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport clsx from 'clsx';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nconst drawerWidth = 240;\r\n\r\n  const useStyles = makeStyles((theme)=>({\r\n    root: {\r\n      display:\"flex\",\r\n    },\r\n\r\n    menu:{\r\n      fontSize: 35,   \r\n      color:\"#808080\",\r\n    },\r\n\r\n    appBar: {\r\n      backgroundColor:\"#000000\",\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n\r\n    type:{\r\n      fontSize: 25, letterSpacing: 2, fontWeight:\"bold\", margin:\"auto\",\r\n    },\r\n\r\n    list:{\r\n       color:\"#4BC676\",\r\n    },\r\n\r\n    drawerOpen: {\r\n      backgroundColor:\"#000000\",\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n\r\n    drawer: {\r\n      backgroundColor:\"#000000\",\r\n      color:\"#ffffff\",\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n\r\n    drawerClose: {\r\n      backgroundColor:\"#000000\",\r\n      \r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n\r\n    toolbar: {\r\n      fontSize: 35,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n\r\n  }));\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return(\r\n    <div className=\"Navbar\">\r\n      <AppBar position=\"sticky\" className={classes.header} className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}>\r\n        <Toolbar>\r\n          <IconButton aria-label=\"open drawer\" color=\"inherit\"  onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}>\r\n            <Menu className={classes.menu}  />\r\n          </IconButton>\r\n          <Typography variant=\"h5\" className={classes.type}>FORM BUILDER</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <CloseIcon className={classes.menu}/> : <CloseIcon className={classes.menu}/>}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <div className={classes.list}>\r\n        <List>\r\n          {['Dashboard', 'Calender'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <DashboardIcon className={classes.menu} /> : < DateRangeIcon className={classes.menu}/> }</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['Teams', 'Person'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? < PeopleIcon className={classes.menu} /> : <PersonIcon className={classes.menu}/>}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        </div>\r\n      </Drawer>      \r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}