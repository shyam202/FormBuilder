{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = _interopRequireDefault(require(\"./utils\"));\n\nvar _utils2 = require(\"../../../../utils/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* eslint-disable quotes, max-len */\n\n\nvar _default = [{\n  weight: 0,\n  input: true,\n  label: 'Advanced Logic',\n  key: 'logic',\n  templates: {\n    header: '<div class=\"row\"> \\n  <div class=\"col-sm-6\">\\n    <strong>{{ value.length }} {{ ctx.t(\"Advanced Logic Configured\") }}</strong>\\n  </div>\\n</div>',\n    row: '<div class=\"row\"> \\n  <div class=\"col-sm-6\">\\n    <div>{{ row.name }} </div>\\n  </div>\\n  <div class=\"col-sm-2\"> \\n    <div class=\"btn-group pull-right\"> \\n      <div class=\"btn btn-default editRow\">{{ ctx.t(\"Edit\") }}</div> \\n      <div class=\"btn btn-danger removeRow\">{{ ctx.t(\"Delete\") }}</div> \\n    </div> \\n  </div> \\n</div>',\n    footer: ''\n  },\n  type: 'editgrid',\n  addAnother: 'Add Logic',\n  saveRow: 'Save Logic',\n  components: [{\n    weight: 0,\n    input: true,\n    inputType: 'text',\n    label: 'Logic Name',\n    key: 'name',\n    validate: {\n      required: true\n    },\n    type: 'textfield'\n  }, {\n    weight: 10,\n    key: 'triggerPanel',\n    input: false,\n    title: 'Trigger',\n    tableView: false,\n    components: [{\n      weight: 0,\n      input: true,\n      tableView: false,\n      components: [{\n        weight: 0,\n        input: true,\n        label: 'Type',\n        key: 'type',\n        tableView: false,\n        data: {\n          values: [{\n            value: 'simple',\n            label: 'Simple'\n          }, {\n            value: 'javascript',\n            label: 'Javascript'\n          }, {\n            value: 'json',\n            label: 'JSON Logic'\n          }, {\n            value: 'event',\n            label: 'Event'\n          }]\n        },\n        dataSrc: 'values',\n        template: '<span>{{ item.label }}</span>',\n        type: 'select'\n      }, {\n        weight: 10,\n        label: '',\n        key: 'simple',\n        type: 'container',\n        tableView: false,\n        customConditional: function customConditional(_ref) {\n          var row = _ref.row;\n          return row.type === 'simple';\n        },\n        components: [{\n          input: true,\n          key: 'show',\n          label: 'Show',\n          type: 'hidden',\n          tableView: false,\n          calculateValue: function calculateValue() {\n            return true;\n          }\n        }, {\n          type: 'select',\n          input: true,\n          label: 'When the form component:',\n          key: 'when',\n          dataSrc: 'custom',\n          valueProperty: 'value',\n          tableView: false,\n          data: {\n            custom: function custom(context) {\n              return (0, _utils2.getContextComponents)(context);\n            }\n          }\n        }, {\n          type: 'textfield',\n          input: true,\n          label: 'Has the value:',\n          key: 'eq',\n          tableView: false\n        }]\n      }, {\n        weight: 10,\n        type: 'textarea',\n        key: 'javascript',\n        rows: 5,\n        editor: 'ace',\n        as: 'javascript',\n        input: true,\n        tableView: false,\n        placeholder: \"result = (data['mykey'] > 1);\",\n        description: '\"row\", \"data\", and \"component\" variables are available. Return \"result\".',\n        customConditional: function customConditional(_ref2) {\n          var row = _ref2.row;\n          return row.type === 'javascript';\n        }\n      }, {\n        weight: 10,\n        type: 'textarea',\n        key: 'json',\n        rows: 5,\n        editor: 'ace',\n        label: 'JSON Logic',\n        as: 'json',\n        input: true,\n        tableView: false,\n        placeholder: \"{ ... }\",\n        description: '\"row\", \"data\", \"component\" and \"_\" variables are available. Return the result to be passed to the action if truthy.',\n        customConditional: function customConditional(_ref3) {\n          var row = _ref3.row;\n          return row.type === 'json';\n        }\n      }, {\n        weight: 10,\n        type: 'textfield',\n        key: 'event',\n        label: 'Event Name',\n        placeholder: 'event',\n        description: 'The event that will trigger this logic. You can trigger events externally or via a button.',\n        tableView: false,\n        customConditional: function customConditional(_ref4) {\n          var row = _ref4.row;\n          return row.type === 'event';\n        }\n      }],\n      key: 'trigger',\n      type: 'container'\n    }],\n    type: 'panel'\n  }, {\n    weight: 20,\n    input: true,\n    label: 'Actions',\n    key: 'actions',\n    tableView: false,\n    templates: {\n      header: '<div class=\"row\"> \\n  <div class=\"col-sm-6\"><strong>{{ value.length }} {{ ctx.t(\"actions\") }}</strong></div>\\n</div>',\n      row: '<div class=\"row\"> \\n  <div class=\"col-sm-6\">\\n    <div>{{ row.name }} </div>\\n  </div>\\n  <div class=\"col-sm-2\"> \\n    <div class=\"btn-group pull-right\"> \\n      <div class=\"btn btn-default editRow\">{{ ctx.t(\"Edit\") }}</div> \\n      <div class=\"btn btn-danger removeRow\">{{ ctx.t(\"Delete\") }}</div> \\n    </div> \\n  </div> \\n</div>',\n      footer: ''\n    },\n    type: 'editgrid',\n    addAnother: 'Add Action',\n    saveRow: 'Save Action',\n    components: [{\n      weight: 0,\n      title: 'Action',\n      input: false,\n      key: 'actionPanel',\n      type: 'panel',\n      components: [{\n        weight: 0,\n        input: true,\n        inputType: 'text',\n        label: 'Action Name',\n        key: 'name',\n        validate: {\n          required: true\n        },\n        type: 'textfield'\n      }, {\n        weight: 10,\n        input: true,\n        label: 'Type',\n        key: 'type',\n        data: {\n          values: [{\n            value: 'property',\n            label: 'Property'\n          }, {\n            value: 'value',\n            label: 'Value'\n          }, {\n            label: 'Merge Component Schema',\n            value: 'mergeComponentSchema'\n          }, {\n            label: 'Custom Action',\n            value: 'customAction'\n          }]\n        },\n        dataSrc: 'values',\n        template: '<span>{{ item.label }}</span>',\n        type: 'select'\n      }, {\n        weight: 20,\n        type: 'select',\n        template: '<span>{{ item.label }}</span>',\n        dataSrc: 'json',\n        tableView: false,\n        data: {\n          json: [{\n            label: 'Hidden',\n            value: 'hidden',\n            type: 'boolean'\n          }, {\n            label: 'Required',\n            value: 'validate.required',\n            type: 'boolean'\n          }, {\n            label: 'Disabled',\n            value: 'disabled',\n            type: 'boolean'\n          }, {\n            label: 'Label',\n            value: 'label',\n            type: 'string'\n          }, {\n            label: 'Title',\n            value: 'title',\n            type: 'string'\n          }, {\n            label: 'Prefix',\n            value: 'prefix',\n            type: 'string'\n          }, {\n            label: 'Suffix',\n            value: 'suffix',\n            type: 'string'\n          }, {\n            label: 'Tooltip',\n            value: 'tooltip',\n            type: 'string'\n          }, {\n            label: 'Description',\n            value: 'description',\n            type: 'string'\n          }, {\n            label: 'Placeholder',\n            value: 'placeholder',\n            type: 'string'\n          }, {\n            label: 'Input Mask',\n            value: 'inputMask',\n            type: 'string'\n          }, {\n            label: 'CSS Class',\n            value: 'className',\n            type: 'string'\n          }, {\n            label: 'Container Custom Class',\n            value: 'customClass',\n            type: 'string'\n          }]\n        },\n        key: 'property',\n        label: 'Component Property',\n        input: true,\n        customConditional: function customConditional(_ref5) {\n          var row = _ref5.row;\n          return row.type === 'property';\n        }\n      }, {\n        weight: 30,\n        input: true,\n        label: 'Set State',\n        key: 'state',\n        tableView: false,\n        data: {\n          values: [{\n            label: 'True',\n            value: 'true'\n          }, {\n            label: 'False',\n            value: 'false'\n          }]\n        },\n        dataSrc: 'values',\n        template: '<span>{{ item.label }}</span>',\n        type: 'select',\n        customConditional: function customConditional(_ref6) {\n          var row = _ref6.row;\n          return row.type === 'property' && row.hasOwnProperty('property') && row.property.type === 'boolean';\n        }\n      }, {\n        weight: 30,\n        type: 'textfield',\n        key: 'text',\n        label: 'Text',\n        inputType: 'text',\n        input: true,\n        tableView: false,\n        description: 'Can use templating with {{ data.myfield }}. \"data\", \"row\", \"component\" and \"result\" variables are available.',\n        customConditional: function customConditional(_ref7) {\n          var row = _ref7.row;\n          return row.type === 'property' && row.hasOwnProperty('property') && row.property.type === 'string' && !row.property.component;\n        }\n      }, {\n        weight: 20,\n        input: true,\n        label: 'Value (Javascript)',\n        key: 'value',\n        editor: 'ace',\n        as: 'javascript',\n        rows: 5,\n        placeholder: \"value = data.myfield;\",\n        type: 'textarea',\n        tableView: false,\n        description: '\"row\", \"data\", \"component\", and \"result\" variables are available. Return the value.',\n        customConditional: function customConditional(_ref8) {\n          var row = _ref8.row;\n          return row.type === 'value';\n        }\n      }, {\n        weight: 20,\n        input: true,\n        label: 'Schema Defenition',\n        key: 'schemaDefinition',\n        editor: 'ace',\n        as: 'javascript',\n        rows: 5,\n        placeholder: \"schema = { label: 'Updated' };\",\n        type: 'textarea',\n        tableView: false,\n        description: '\"row\", \"data\", \"component\", and \"result\" variables are available. Return the schema.',\n        customConditional: function customConditional(_ref9) {\n          var row = _ref9.row;\n          return row.type === 'mergeComponentSchema';\n        }\n      }, Object.assign(_utils.default.logicVariablesTable('<tr><th>input</th><td>The value that was input into this component</td></tr>'), {\n        customConditional: function customConditional(_ref10) {\n          var row = _ref10.row;\n          return row.type === 'customAction';\n        }\n      }), {\n        weight: 20,\n        input: true,\n        label: 'Custom Action (Javascript)',\n        key: 'customAction',\n        editor: 'ace',\n        rows: 5,\n        placeholder: \"value = data.myfield;\",\n        type: 'textarea',\n        tableView: false,\n        customConditional: function customConditional(_ref11) {\n          var row = _ref11.row;\n          return row.type === 'customAction';\n        }\n      }]\n    }]\n  }]\n}];\n/* eslint-enable quotes, max-len */\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ShyamLakhani/Desktop/my-app/node_modules/formiojs/components/_classes/component/editForm/Component.edit.logic.js"],"names":["Object","defineProperty","exports","value","default","_utils","_interopRequireDefault","require","_utils2","obj","__esModule","_default","weight","input","label","key","templates","header","row","footer","type","addAnother","saveRow","components","inputType","validate","required","title","tableView","data","values","dataSrc","template","customConditional","_ref","calculateValue","valueProperty","custom","context","getContextComponents","rows","editor","as","placeholder","description","_ref2","_ref3","_ref4","json","_ref5","_ref6","hasOwnProperty","property","_ref7","component","_ref8","_ref9","assign","logicVariablesTable","_ref10","_ref11"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es.object.assign.js\");\n\nvar _utils = _interopRequireDefault(require(\"./utils\"));\n\nvar _utils2 = require(\"../../../../utils/utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable quotes, max-len */\nvar _default = [{\n  weight: 0,\n  input: true,\n  label: 'Advanced Logic',\n  key: 'logic',\n  templates: {\n    header: '<div class=\"row\"> \\n  <div class=\"col-sm-6\">\\n    <strong>{{ value.length }} {{ ctx.t(\"Advanced Logic Configured\") }}</strong>\\n  </div>\\n</div>',\n    row: '<div class=\"row\"> \\n  <div class=\"col-sm-6\">\\n    <div>{{ row.name }} </div>\\n  </div>\\n  <div class=\"col-sm-2\"> \\n    <div class=\"btn-group pull-right\"> \\n      <div class=\"btn btn-default editRow\">{{ ctx.t(\"Edit\") }}</div> \\n      <div class=\"btn btn-danger removeRow\">{{ ctx.t(\"Delete\") }}</div> \\n    </div> \\n  </div> \\n</div>',\n    footer: ''\n  },\n  type: 'editgrid',\n  addAnother: 'Add Logic',\n  saveRow: 'Save Logic',\n  components: [{\n    weight: 0,\n    input: true,\n    inputType: 'text',\n    label: 'Logic Name',\n    key: 'name',\n    validate: {\n      required: true\n    },\n    type: 'textfield'\n  }, {\n    weight: 10,\n    key: 'triggerPanel',\n    input: false,\n    title: 'Trigger',\n    tableView: false,\n    components: [{\n      weight: 0,\n      input: true,\n      tableView: false,\n      components: [{\n        weight: 0,\n        input: true,\n        label: 'Type',\n        key: 'type',\n        tableView: false,\n        data: {\n          values: [{\n            value: 'simple',\n            label: 'Simple'\n          }, {\n            value: 'javascript',\n            label: 'Javascript'\n          }, {\n            value: 'json',\n            label: 'JSON Logic'\n          }, {\n            value: 'event',\n            label: 'Event'\n          }]\n        },\n        dataSrc: 'values',\n        template: '<span>{{ item.label }}</span>',\n        type: 'select'\n      }, {\n        weight: 10,\n        label: '',\n        key: 'simple',\n        type: 'container',\n        tableView: false,\n        customConditional: function customConditional(_ref) {\n          var row = _ref.row;\n          return row.type === 'simple';\n        },\n        components: [{\n          input: true,\n          key: 'show',\n          label: 'Show',\n          type: 'hidden',\n          tableView: false,\n          calculateValue: function calculateValue() {\n            return true;\n          }\n        }, {\n          type: 'select',\n          input: true,\n          label: 'When the form component:',\n          key: 'when',\n          dataSrc: 'custom',\n          valueProperty: 'value',\n          tableView: false,\n          data: {\n            custom: function custom(context) {\n              return (0, _utils2.getContextComponents)(context);\n            }\n          }\n        }, {\n          type: 'textfield',\n          input: true,\n          label: 'Has the value:',\n          key: 'eq',\n          tableView: false\n        }]\n      }, {\n        weight: 10,\n        type: 'textarea',\n        key: 'javascript',\n        rows: 5,\n        editor: 'ace',\n        as: 'javascript',\n        input: true,\n        tableView: false,\n        placeholder: \"result = (data['mykey'] > 1);\",\n        description: '\"row\", \"data\", and \"component\" variables are available. Return \"result\".',\n        customConditional: function customConditional(_ref2) {\n          var row = _ref2.row;\n          return row.type === 'javascript';\n        }\n      }, {\n        weight: 10,\n        type: 'textarea',\n        key: 'json',\n        rows: 5,\n        editor: 'ace',\n        label: 'JSON Logic',\n        as: 'json',\n        input: true,\n        tableView: false,\n        placeholder: \"{ ... }\",\n        description: '\"row\", \"data\", \"component\" and \"_\" variables are available. Return the result to be passed to the action if truthy.',\n        customConditional: function customConditional(_ref3) {\n          var row = _ref3.row;\n          return row.type === 'json';\n        }\n      }, {\n        weight: 10,\n        type: 'textfield',\n        key: 'event',\n        label: 'Event Name',\n        placeholder: 'event',\n        description: 'The event that will trigger this logic. You can trigger events externally or via a button.',\n        tableView: false,\n        customConditional: function customConditional(_ref4) {\n          var row = _ref4.row;\n          return row.type === 'event';\n        }\n      }],\n      key: 'trigger',\n      type: 'container'\n    }],\n    type: 'panel'\n  }, {\n    weight: 20,\n    input: true,\n    label: 'Actions',\n    key: 'actions',\n    tableView: false,\n    templates: {\n      header: '<div class=\"row\"> \\n  <div class=\"col-sm-6\"><strong>{{ value.length }} {{ ctx.t(\"actions\") }}</strong></div>\\n</div>',\n      row: '<div class=\"row\"> \\n  <div class=\"col-sm-6\">\\n    <div>{{ row.name }} </div>\\n  </div>\\n  <div class=\"col-sm-2\"> \\n    <div class=\"btn-group pull-right\"> \\n      <div class=\"btn btn-default editRow\">{{ ctx.t(\"Edit\") }}</div> \\n      <div class=\"btn btn-danger removeRow\">{{ ctx.t(\"Delete\") }}</div> \\n    </div> \\n  </div> \\n</div>',\n      footer: ''\n    },\n    type: 'editgrid',\n    addAnother: 'Add Action',\n    saveRow: 'Save Action',\n    components: [{\n      weight: 0,\n      title: 'Action',\n      input: false,\n      key: 'actionPanel',\n      type: 'panel',\n      components: [{\n        weight: 0,\n        input: true,\n        inputType: 'text',\n        label: 'Action Name',\n        key: 'name',\n        validate: {\n          required: true\n        },\n        type: 'textfield'\n      }, {\n        weight: 10,\n        input: true,\n        label: 'Type',\n        key: 'type',\n        data: {\n          values: [{\n            value: 'property',\n            label: 'Property'\n          }, {\n            value: 'value',\n            label: 'Value'\n          }, {\n            label: 'Merge Component Schema',\n            value: 'mergeComponentSchema'\n          }, {\n            label: 'Custom Action',\n            value: 'customAction'\n          }]\n        },\n        dataSrc: 'values',\n        template: '<span>{{ item.label }}</span>',\n        type: 'select'\n      }, {\n        weight: 20,\n        type: 'select',\n        template: '<span>{{ item.label }}</span>',\n        dataSrc: 'json',\n        tableView: false,\n        data: {\n          json: [{\n            label: 'Hidden',\n            value: 'hidden',\n            type: 'boolean'\n          }, {\n            label: 'Required',\n            value: 'validate.required',\n            type: 'boolean'\n          }, {\n            label: 'Disabled',\n            value: 'disabled',\n            type: 'boolean'\n          }, {\n            label: 'Label',\n            value: 'label',\n            type: 'string'\n          }, {\n            label: 'Title',\n            value: 'title',\n            type: 'string'\n          }, {\n            label: 'Prefix',\n            value: 'prefix',\n            type: 'string'\n          }, {\n            label: 'Suffix',\n            value: 'suffix',\n            type: 'string'\n          }, {\n            label: 'Tooltip',\n            value: 'tooltip',\n            type: 'string'\n          }, {\n            label: 'Description',\n            value: 'description',\n            type: 'string'\n          }, {\n            label: 'Placeholder',\n            value: 'placeholder',\n            type: 'string'\n          }, {\n            label: 'Input Mask',\n            value: 'inputMask',\n            type: 'string'\n          }, {\n            label: 'CSS Class',\n            value: 'className',\n            type: 'string'\n          }, {\n            label: 'Container Custom Class',\n            value: 'customClass',\n            type: 'string'\n          }]\n        },\n        key: 'property',\n        label: 'Component Property',\n        input: true,\n        customConditional: function customConditional(_ref5) {\n          var row = _ref5.row;\n          return row.type === 'property';\n        }\n      }, {\n        weight: 30,\n        input: true,\n        label: 'Set State',\n        key: 'state',\n        tableView: false,\n        data: {\n          values: [{\n            label: 'True',\n            value: 'true'\n          }, {\n            label: 'False',\n            value: 'false'\n          }]\n        },\n        dataSrc: 'values',\n        template: '<span>{{ item.label }}</span>',\n        type: 'select',\n        customConditional: function customConditional(_ref6) {\n          var row = _ref6.row;\n          return row.type === 'property' && row.hasOwnProperty('property') && row.property.type === 'boolean';\n        }\n      }, {\n        weight: 30,\n        type: 'textfield',\n        key: 'text',\n        label: 'Text',\n        inputType: 'text',\n        input: true,\n        tableView: false,\n        description: 'Can use templating with {{ data.myfield }}. \"data\", \"row\", \"component\" and \"result\" variables are available.',\n        customConditional: function customConditional(_ref7) {\n          var row = _ref7.row;\n          return row.type === 'property' && row.hasOwnProperty('property') && row.property.type === 'string' && !row.property.component;\n        }\n      }, {\n        weight: 20,\n        input: true,\n        label: 'Value (Javascript)',\n        key: 'value',\n        editor: 'ace',\n        as: 'javascript',\n        rows: 5,\n        placeholder: \"value = data.myfield;\",\n        type: 'textarea',\n        tableView: false,\n        description: '\"row\", \"data\", \"component\", and \"result\" variables are available. Return the value.',\n        customConditional: function customConditional(_ref8) {\n          var row = _ref8.row;\n          return row.type === 'value';\n        }\n      }, {\n        weight: 20,\n        input: true,\n        label: 'Schema Defenition',\n        key: 'schemaDefinition',\n        editor: 'ace',\n        as: 'javascript',\n        rows: 5,\n        placeholder: \"schema = { label: 'Updated' };\",\n        type: 'textarea',\n        tableView: false,\n        description: '\"row\", \"data\", \"component\", and \"result\" variables are available. Return the schema.',\n        customConditional: function customConditional(_ref9) {\n          var row = _ref9.row;\n          return row.type === 'mergeComponentSchema';\n        }\n      }, Object.assign(_utils.default.logicVariablesTable('<tr><th>input</th><td>The value that was input into this component</td></tr>'), {\n        customConditional: function customConditional(_ref10) {\n          var row = _ref10.row;\n          return row.type === 'customAction';\n        }\n      }), {\n        weight: 20,\n        input: true,\n        label: 'Custom Action (Javascript)',\n        key: 'customAction',\n        editor: 'ace',\n        rows: 5,\n        placeholder: \"value = data.myfield;\",\n        type: 'textarea',\n        tableView: false,\n        customConditional: function customConditional(_ref11) {\n          var row = _ref11.row;\n          return row.type === 'customAction';\n        }\n      }]\n    }]\n  }]\n}];\n/* eslint-enable quotes, max-len */\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}