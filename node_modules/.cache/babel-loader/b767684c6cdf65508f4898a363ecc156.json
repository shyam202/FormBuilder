{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = [{\n  key: 'labelPosition',\n  ignore: true\n}, {\n  key: 'placeholder',\n  ignore: true\n}, {\n  key: 'description',\n  ignore: true\n}, {\n  key: 'autofocus',\n  ignore: true\n}, {\n  key: 'tableView',\n  ignore: true\n}, {\n  key: 'label',\n  hidden: true,\n  calculateValue: function calculateValue(context) {\n    return context.data.title;\n  }\n}, {\n  key: 'tabindex',\n  hidden: true\n}, {\n  weight: 1,\n  type: 'textfield',\n  input: true,\n  placeholder: 'Panel Title',\n  label: 'Title',\n  key: 'title',\n  tooltip: 'The title text that appears in the header of this panel.'\n}, {\n  weight: 20,\n  type: 'textarea',\n  input: true,\n  key: 'tooltip',\n  label: 'Tooltip',\n  placeholder: 'To add a tooltip to this field, enter text here.',\n  tooltip: 'Adds a tooltip to the side of this field.'\n}, {\n  weight: 30,\n  type: 'select',\n  input: true,\n  label: 'Theme',\n  key: 'theme',\n  dataSrc: 'values',\n  data: {\n    values: [{\n      label: 'Default',\n      value: 'default'\n    }, {\n      label: 'Primary',\n      value: 'primary'\n    }, {\n      label: 'Info',\n      value: 'info'\n    }, {\n      label: 'Success',\n      value: 'success'\n    }, {\n      label: 'Danger',\n      value: 'danger'\n    }, {\n      label: 'Warning',\n      value: 'warning'\n    }]\n  }\n}, {\n  weight: 40,\n  type: 'fieldset',\n  input: false,\n  components: [{\n    type: 'select',\n    input: true,\n    label: 'Breadcrumb Type',\n    key: 'breadcrumb',\n    dataSrc: 'values',\n    data: {\n      values: [{\n        label: 'Default',\n        value: 'default'\n      }, {\n        label: 'Condensed',\n        value: 'condensed'\n      }, {\n        label: 'Hidden',\n        value: 'none'\n      }]\n    }\n  }, {\n    input: true,\n    type: 'checkbox',\n    label: 'Allow click on Breadcrumb',\n    key: 'breadcrumbClickable',\n    defaultValue: true,\n    conditional: {\n      json: {\n        '!==': [{\n          var: 'data.breadcrumb'\n        }, 'none']\n      }\n    }\n  }, {\n    input: true,\n    type: 'checkbox',\n    label: 'Allow Previous',\n    key: 'allowPrevious',\n    defaultValue: false,\n    tooltip: 'Determines if the breadcrumb bar is clickable or not for visited tabs.',\n    conditional: {\n      json: {\n        '===': [{\n          var: 'data.breadcrumbClickable'\n        }, false]\n      }\n    }\n  }, {\n    weight: 50,\n    label: 'Panel Navigation Buttons',\n    optionsLabelPosition: 'right',\n    values: [{\n      label: 'Previous',\n      value: 'previous'\n    }, {\n      label: 'Cancel',\n      value: 'cancel'\n    }, {\n      label: 'Next',\n      value: 'next'\n    }],\n    inline: true,\n    type: 'selectboxes',\n    key: 'buttonSettings',\n    input: true,\n    inputType: 'checkbox',\n    defaultValue: {\n      previous: true,\n      cancel: true,\n      next: true\n    }\n  }, {\n    weight: 60,\n    label: 'Scroll up on page opening',\n    type: 'checkbox',\n    key: 'scrollToTop',\n    input: true,\n    inputType: 'checkbox',\n    defaultValue: false,\n    tooltip: 'Scroll to the top of the wizard page when user navigates to it'\n  }],\n  customConditional: function customConditional(context) {\n    return context.instance.options.editForm.display === 'wizard';\n  }\n}, {\n  weight: 650,\n  type: 'checkbox',\n  label: 'Collapsible',\n  tooltip: 'If checked, this will turn this Panel into a collapsible panel.',\n  key: 'collapsible',\n  input: true\n}, {\n  weight: 651,\n  type: 'checkbox',\n  label: 'Initially Collapsed',\n  tooltip: 'Determines the initial collapsed state of this Panel.',\n  key: 'collapsed',\n  input: true,\n  conditional: {\n    json: {\n      '===': [{\n        var: 'data.collapsible'\n      }, true]\n    }\n  }\n}];\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ShyamLakhani/Desktop/my-app/node_modules/formiojs/components/panel/editForm/Panel.edit.display.js"],"names":["Object","defineProperty","exports","value","default","_default","key","ignore","hidden","calculateValue","context","data","title","weight","type","input","placeholder","label","tooltip","dataSrc","values","components","defaultValue","conditional","json","var","optionsLabelPosition","inline","inputType","previous","cancel","next","customConditional","instance","options","editForm","display"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = [{\n  key: 'labelPosition',\n  ignore: true\n}, {\n  key: 'placeholder',\n  ignore: true\n}, {\n  key: 'description',\n  ignore: true\n}, {\n  key: 'autofocus',\n  ignore: true\n}, {\n  key: 'tableView',\n  ignore: true\n}, {\n  key: 'label',\n  hidden: true,\n  calculateValue: function calculateValue(context) {\n    return context.data.title;\n  }\n}, {\n  key: 'tabindex',\n  hidden: true\n}, {\n  weight: 1,\n  type: 'textfield',\n  input: true,\n  placeholder: 'Panel Title',\n  label: 'Title',\n  key: 'title',\n  tooltip: 'The title text that appears in the header of this panel.'\n}, {\n  weight: 20,\n  type: 'textarea',\n  input: true,\n  key: 'tooltip',\n  label: 'Tooltip',\n  placeholder: 'To add a tooltip to this field, enter text here.',\n  tooltip: 'Adds a tooltip to the side of this field.'\n}, {\n  weight: 30,\n  type: 'select',\n  input: true,\n  label: 'Theme',\n  key: 'theme',\n  dataSrc: 'values',\n  data: {\n    values: [{\n      label: 'Default',\n      value: 'default'\n    }, {\n      label: 'Primary',\n      value: 'primary'\n    }, {\n      label: 'Info',\n      value: 'info'\n    }, {\n      label: 'Success',\n      value: 'success'\n    }, {\n      label: 'Danger',\n      value: 'danger'\n    }, {\n      label: 'Warning',\n      value: 'warning'\n    }]\n  }\n}, {\n  weight: 40,\n  type: 'fieldset',\n  input: false,\n  components: [{\n    type: 'select',\n    input: true,\n    label: 'Breadcrumb Type',\n    key: 'breadcrumb',\n    dataSrc: 'values',\n    data: {\n      values: [{\n        label: 'Default',\n        value: 'default'\n      }, {\n        label: 'Condensed',\n        value: 'condensed'\n      }, {\n        label: 'Hidden',\n        value: 'none'\n      }]\n    }\n  }, {\n    input: true,\n    type: 'checkbox',\n    label: 'Allow click on Breadcrumb',\n    key: 'breadcrumbClickable',\n    defaultValue: true,\n    conditional: {\n      json: {\n        '!==': [{\n          var: 'data.breadcrumb'\n        }, 'none']\n      }\n    }\n  }, {\n    input: true,\n    type: 'checkbox',\n    label: 'Allow Previous',\n    key: 'allowPrevious',\n    defaultValue: false,\n    tooltip: 'Determines if the breadcrumb bar is clickable or not for visited tabs.',\n    conditional: {\n      json: {\n        '===': [{\n          var: 'data.breadcrumbClickable'\n        }, false]\n      }\n    }\n  }, {\n    weight: 50,\n    label: 'Panel Navigation Buttons',\n    optionsLabelPosition: 'right',\n    values: [{\n      label: 'Previous',\n      value: 'previous'\n    }, {\n      label: 'Cancel',\n      value: 'cancel'\n    }, {\n      label: 'Next',\n      value: 'next'\n    }],\n    inline: true,\n    type: 'selectboxes',\n    key: 'buttonSettings',\n    input: true,\n    inputType: 'checkbox',\n    defaultValue: {\n      previous: true,\n      cancel: true,\n      next: true\n    }\n  }, {\n    weight: 60,\n    label: 'Scroll up on page opening',\n    type: 'checkbox',\n    key: 'scrollToTop',\n    input: true,\n    inputType: 'checkbox',\n    defaultValue: false,\n    tooltip: 'Scroll to the top of the wizard page when user navigates to it'\n  }],\n  customConditional: function customConditional(context) {\n    return context.instance.options.editForm.display === 'wizard';\n  }\n}, {\n  weight: 650,\n  type: 'checkbox',\n  label: 'Collapsible',\n  tooltip: 'If checked, this will turn this Panel into a collapsible panel.',\n  key: 'collapsible',\n  input: true\n}, {\n  weight: 651,\n  type: 'checkbox',\n  label: 'Initially Collapsed',\n  tooltip: 'Determines the initial collapsed state of this Panel.',\n  key: 'collapsed',\n  input: true,\n  conditional: {\n    json: {\n      '===': [{\n        var: 'data.collapsible'\n      }, true]\n    }\n  }\n}];\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}