{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar url = function url(formio) {\n  var xhrRequest = function xhrRequest(url, name, query, data, options, progressCallback, abortCallback) {\n    return new _nativePromiseOnly.default(function (resolve, reject) {\n      var xhr = new XMLHttpRequest();\n      var json = typeof data === 'string';\n      var fd = new FormData();\n\n      if (typeof progressCallback === 'function') {\n        xhr.upload.onprogress = progressCallback;\n      }\n\n      if (typeof abortCallback === 'function') {\n        abortCallback(function () {\n          return xhr.abort();\n        });\n      }\n\n      if (!json) {\n        for (var key in data) {\n          fd.append(key, data[key]);\n        }\n      }\n\n      xhr.onload = function () {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          // Need to test if xhr.response is decoded or not.\n          var respData = {};\n\n          try {\n            respData = typeof xhr.response === 'string' ? JSON.parse(xhr.response) : {};\n            respData = respData && respData.data ? respData.data : respData;\n          } catch (err) {\n            respData = {};\n          } // Get the url of the file.\n\n\n          var respUrl = respData.hasOwnProperty('url') ? respData.url : \"\".concat(xhr.responseURL, \"/\").concat(name); // If they provide relative url, then prepend the url.\n\n          if (respUrl && respUrl[0] === '/') {\n            respUrl = \"\".concat(url).concat(respUrl);\n          }\n\n          resolve({\n            url: respUrl,\n            data: respData\n          });\n        } else {\n          reject(xhr.response || 'Unable to upload file');\n        }\n      };\n\n      xhr.onerror = function () {\n        return reject(xhr);\n      };\n\n      xhr.onabort = function () {\n        return reject(xhr);\n      };\n\n      var requestUrl = url + (url.indexOf('?') > -1 ? '&' : '?');\n\n      for (var _key in query) {\n        requestUrl += \"\".concat(_key, \"=\").concat(query[_key], \"&\");\n      }\n\n      if (requestUrl[requestUrl.length - 1] === '&') {\n        requestUrl = requestUrl.substr(0, requestUrl.length - 1);\n      }\n\n      xhr.open('POST', requestUrl);\n\n      if (json) {\n        xhr.setRequestHeader('Content-Type', 'application/json');\n      }\n\n      var token = formio.getToken();\n\n      if (token) {\n        xhr.setRequestHeader('x-jwt-token', token);\n      } //Overrides previous request props\n\n\n      if (options) {\n        var parsedOptions = typeof options === 'string' ? JSON.parse(options) : options;\n\n        for (var prop in parsedOptions) {\n          xhr[prop] = parsedOptions[prop];\n        }\n      }\n\n      xhr.send(json ? data : fd);\n    });\n  };\n\n  return {\n    title: 'Url',\n    name: 'url',\n    uploadFile: function uploadFile(file, name, dir, progressCallback, url, options, fileKey, groupPermissions, groupId, abortCallback) {\n      var uploadRequest = function uploadRequest(form) {\n        var _xhrRequest;\n\n        return xhrRequest(url, name, {\n          baseUrl: encodeURIComponent(formio.projectUrl),\n          project: form ? form.project : '',\n          form: form ? form._id : ''\n        }, (_xhrRequest = {}, _defineProperty(_xhrRequest, fileKey, file), _defineProperty(_xhrRequest, \"name\", name), _defineProperty(_xhrRequest, \"dir\", dir), _xhrRequest), options, progressCallback, abortCallback).then(function (response) {\n          // Store the project and form url along with the metadata.\n          response.data = response.data || {};\n          response.data.baseUrl = formio.projectUrl;\n          response.data.project = form ? form.project : '';\n          response.data.form = form ? form._id : '';\n          return {\n            storage: 'url',\n            name: name,\n            url: response.url,\n            size: file.size,\n            type: file.type,\n            data: response.data\n          };\n        });\n      };\n\n      if (file.private && formio.formId) {\n        return formio.loadForm().then(function (form) {\n          return uploadRequest(form);\n        });\n      } else {\n        return uploadRequest();\n      }\n    },\n    deleteFile: function deleteFile(fileInfo) {\n      return new _nativePromiseOnly.default(function (resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('DELETE', fileInfo.url, true);\n\n        xhr.onload = function () {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            resolve('File deleted');\n          } else {\n            reject(xhr.response || 'Unable to delete file');\n          }\n        };\n\n        xhr.send(null);\n      });\n    },\n    downloadFile: function downloadFile(file) {\n      if (file.private) {\n        if (formio.submissionId && file.data) {\n          file.data.submission = formio.submissionId;\n        }\n\n        return xhrRequest(file.url, file.name, {}, JSON.stringify(file)).then(function (response) {\n          return response.data;\n        });\n      } // Return the original as there is nothing to do.\n\n\n      return _nativePromiseOnly.default.resolve(file);\n    }\n  };\n};\n\nurl.title = 'Url';\nvar _default = url;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ShyamLakhani/Desktop/my-app/node_modules/formiojs/providers/storage/url.js"],"names":["Object","defineProperty","exports","value","default","_nativePromiseOnly","_interopRequireDefault","require","obj","__esModule","_defineProperty","key","enumerable","configurable","writable","url","formio","xhrRequest","name","query","data","options","progressCallback","abortCallback","resolve","reject","xhr","XMLHttpRequest","json","fd","FormData","upload","onprogress","abort","append","onload","status","respData","response","JSON","parse","err","respUrl","hasOwnProperty","concat","responseURL","onerror","onabort","requestUrl","indexOf","_key","length","substr","open","setRequestHeader","token","getToken","parsedOptions","prop","send","title","uploadFile","file","dir","fileKey","groupPermissions","groupId","uploadRequest","form","_xhrRequest","baseUrl","encodeURIComponent","projectUrl","project","_id","then","storage","size","type","private","formId","loadForm","deleteFile","fileInfo","downloadFile","submissionId","submission","stringify","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar url = function url(formio) {\n  var xhrRequest = function xhrRequest(url, name, query, data, options, progressCallback, abortCallback) {\n    return new _nativePromiseOnly.default(function (resolve, reject) {\n      var xhr = new XMLHttpRequest();\n      var json = typeof data === 'string';\n      var fd = new FormData();\n\n      if (typeof progressCallback === 'function') {\n        xhr.upload.onprogress = progressCallback;\n      }\n\n      if (typeof abortCallback === 'function') {\n        abortCallback(function () {\n          return xhr.abort();\n        });\n      }\n\n      if (!json) {\n        for (var key in data) {\n          fd.append(key, data[key]);\n        }\n      }\n\n      xhr.onload = function () {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          // Need to test if xhr.response is decoded or not.\n          var respData = {};\n\n          try {\n            respData = typeof xhr.response === 'string' ? JSON.parse(xhr.response) : {};\n            respData = respData && respData.data ? respData.data : respData;\n          } catch (err) {\n            respData = {};\n          } // Get the url of the file.\n\n\n          var respUrl = respData.hasOwnProperty('url') ? respData.url : \"\".concat(xhr.responseURL, \"/\").concat(name); // If they provide relative url, then prepend the url.\n\n          if (respUrl && respUrl[0] === '/') {\n            respUrl = \"\".concat(url).concat(respUrl);\n          }\n\n          resolve({\n            url: respUrl,\n            data: respData\n          });\n        } else {\n          reject(xhr.response || 'Unable to upload file');\n        }\n      };\n\n      xhr.onerror = function () {\n        return reject(xhr);\n      };\n\n      xhr.onabort = function () {\n        return reject(xhr);\n      };\n\n      var requestUrl = url + (url.indexOf('?') > -1 ? '&' : '?');\n\n      for (var _key in query) {\n        requestUrl += \"\".concat(_key, \"=\").concat(query[_key], \"&\");\n      }\n\n      if (requestUrl[requestUrl.length - 1] === '&') {\n        requestUrl = requestUrl.substr(0, requestUrl.length - 1);\n      }\n\n      xhr.open('POST', requestUrl);\n\n      if (json) {\n        xhr.setRequestHeader('Content-Type', 'application/json');\n      }\n\n      var token = formio.getToken();\n\n      if (token) {\n        xhr.setRequestHeader('x-jwt-token', token);\n      } //Overrides previous request props\n\n\n      if (options) {\n        var parsedOptions = typeof options === 'string' ? JSON.parse(options) : options;\n\n        for (var prop in parsedOptions) {\n          xhr[prop] = parsedOptions[prop];\n        }\n      }\n\n      xhr.send(json ? data : fd);\n    });\n  };\n\n  return {\n    title: 'Url',\n    name: 'url',\n    uploadFile: function uploadFile(file, name, dir, progressCallback, url, options, fileKey, groupPermissions, groupId, abortCallback) {\n      var uploadRequest = function uploadRequest(form) {\n        var _xhrRequest;\n\n        return xhrRequest(url, name, {\n          baseUrl: encodeURIComponent(formio.projectUrl),\n          project: form ? form.project : '',\n          form: form ? form._id : ''\n        }, (_xhrRequest = {}, _defineProperty(_xhrRequest, fileKey, file), _defineProperty(_xhrRequest, \"name\", name), _defineProperty(_xhrRequest, \"dir\", dir), _xhrRequest), options, progressCallback, abortCallback).then(function (response) {\n          // Store the project and form url along with the metadata.\n          response.data = response.data || {};\n          response.data.baseUrl = formio.projectUrl;\n          response.data.project = form ? form.project : '';\n          response.data.form = form ? form._id : '';\n          return {\n            storage: 'url',\n            name: name,\n            url: response.url,\n            size: file.size,\n            type: file.type,\n            data: response.data\n          };\n        });\n      };\n\n      if (file.private && formio.formId) {\n        return formio.loadForm().then(function (form) {\n          return uploadRequest(form);\n        });\n      } else {\n        return uploadRequest();\n      }\n    },\n    deleteFile: function deleteFile(fileInfo) {\n      return new _nativePromiseOnly.default(function (resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('DELETE', fileInfo.url, true);\n\n        xhr.onload = function () {\n          if (xhr.status >= 200 && xhr.status < 300) {\n            resolve('File deleted');\n          } else {\n            reject(xhr.response || 'Unable to delete file');\n          }\n        };\n\n        xhr.send(null);\n      });\n    },\n    downloadFile: function downloadFile(file) {\n      if (file.private) {\n        if (formio.submissionId && file.data) {\n          file.data.submission = formio.submissionId;\n        }\n\n        return xhrRequest(file.url, file.name, {}, JSON.stringify(file)).then(function (response) {\n          return response.data;\n        });\n      } // Return the original as there is nothing to do.\n\n\n      return _nativePromiseOnly.default.resolve(file);\n    }\n  };\n};\n\nurl.title = 'Url';\nvar _default = url;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}