{"ast":null,"code":"import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames } from '@progress/kendo-react-common';\nimport { avatarType, avatarShape, avatarSize, avatarFill, avatarThemeColor } from './interfaces/Enums';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { packageMetadata } from '../package-metadata';\nexport var Avatar = function (props) {\n  validatePackage(packageMetadata);\n  return React.createElement(\"div\", {\n    style: props.style,\n    className: classNames('k-avatar', \"k-avatar-\" + props.fill, \"k-avatar-\" + props.shape, \"k-avatar-\" + props.themeColor, {\n      'k-avatar-bordered': props.border,\n      'k-avatar-sm': props.size === 'small',\n      'k-avatar-md': props.size === 'medium',\n      'k-avatar-lg': props.size === 'large'\n    }, props.className)\n  }, React.createElement(\"span\", {\n    className: \"k-avatar-\" + props.type\n  }, props.children));\n};\nAvatar.propTypes = {\n  className: PropTypes.string,\n  shape: PropTypes.oneOf(['circle', 'square', 'rounded', 'rectangle']),\n  type: PropTypes.oneOf(['text', 'image', 'icon']),\n  fill: PropTypes.oneOf(['solid', 'outline']),\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  themeColor: PropTypes.oneOf(['primary', 'secondary', 'tertiary', 'info', 'success', 'warning', 'error', 'dark', 'light', 'inverse', 'inherit'])\n};\nAvatar.defaultProps = {\n  type: avatarType.TEXT,\n  shape: avatarShape.SQUARE,\n  size: avatarSize.MEDIUM,\n  fill: avatarFill.SOLID,\n  themeColor: avatarThemeColor.PRIMARY\n};","map":{"version":3,"sources":["../../../src/card/Avatar.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAK,SAAZ,MAA2B,YAA3B;AACA,SAAS,UAAT,QAA2B,8BAA3B;AAEA,SAAS,UAAT,EAAqB,WAArB,EAAkC,UAAlC,EAA8C,UAA9C,EAA0D,gBAA1D,QAAkF,oBAAlF;AACA,SAAS,eAAT,QAAgC,2BAAhC;AACA,SAAS,eAAT,QAAgC,qBAAhC;AAEA,OAAO,IAAM,MAAM,GAAyC,UAAC,KAAD,EAAmB;AAC3E,EAAA,eAAe,CAAC,eAAD,CAAf;AACA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,KAAK,EAAE,KAAK,CAAC,KADf;AAEE,IAAA,SAAS,EAAE,UAAU,CACb,UADa,EAEb,cAAY,KAAK,CAAC,IAFL,EAGb,cAAY,KAAK,CAAC,KAHL,EAIb,cAAY,KAAK,CAAC,UAJL,EAKb;AACI,2BAAqB,KAAK,CAAC,MAD/B;AAEI,qBAAe,KAAK,CAAC,IAAN,KAAe,OAFlC;AAGI,qBAAe,KAAK,CAAC,IAAN,KAAe,QAHlC;AAII,qBAAe,KAAK,CAAC,IAAN,KAAe;AAJlC,KALa,EAWb,KAAK,CAAC,SAXO;AAFvB,GAAA,EAgBE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,cAAY,KAAK,CAAC;AAAnC,GAAA,EACG,KAAK,CAAC,QADT,CAhBF,CADF;AAsBH,CAxBM;AA0BP,MAAM,CAAC,SAAP,GAAmB;AACf,EAAA,SAAS,EAAE,SAAS,CAAC,MADN;AAEf,EAAA,KAAK,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,CAAhB,CAFQ;AAGf,EAAA,IAAI,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAAhB,CAHS;AAIf,EAAA,IAAI,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,OAAD,EAAU,SAAV,CAAhB,CAJS;AAKf,EAAA,IAAI,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CALS;AAMf,EAAA,UAAU,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,SAAD,EAAY,WAAZ,EAAyB,UAAzB,EAAqC,MAArC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,OAAnE,EAA4E,MAA5E,EAAoF,OAApF,EAA6F,SAA7F,EAAwG,SAAxG,CAAhB;AANG,CAAnB;AAQA,MAAM,CAAC,YAAP,GAAsB;AAClB,EAAA,IAAI,EAAE,UAAU,CAAC,IADC;AAElB,EAAA,KAAK,EAAE,WAAW,CAAC,MAFD;AAGlB,EAAA,IAAI,EAAE,UAAU,CAAC,MAHC;AAIlB,EAAA,IAAI,EAAE,UAAU,CAAC,KAJC;AAKlB,EAAA,UAAU,EAAE,gBAAgB,CAAC;AALX,CAAtB","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames } from '@progress/kendo-react-common';\nimport { avatarType, avatarShape, avatarSize, avatarFill, avatarThemeColor } from './interfaces/Enums';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { packageMetadata } from '../package-metadata';\nexport var Avatar = function (props) {\n    validatePackage(packageMetadata);\n    return (React.createElement(\"div\", { style: props.style, className: classNames('k-avatar', \"k-avatar-\" + props.fill, \"k-avatar-\" + props.shape, \"k-avatar-\" + props.themeColor, {\n            'k-avatar-bordered': props.border,\n            'k-avatar-sm': props.size === 'small',\n            'k-avatar-md': props.size === 'medium',\n            'k-avatar-lg': props.size === 'large'\n        }, props.className) },\n        React.createElement(\"span\", { className: \"k-avatar-\" + props.type }, props.children)));\n};\nAvatar.propTypes = {\n    className: PropTypes.string,\n    shape: PropTypes.oneOf(['circle', 'square', 'rounded', 'rectangle']),\n    type: PropTypes.oneOf(['text', 'image', 'icon']),\n    fill: PropTypes.oneOf(['solid', 'outline']),\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n    themeColor: PropTypes.oneOf(['primary', 'secondary', 'tertiary', 'info', 'success', 'warning', 'error', 'dark', 'light', 'inverse', 'inherit'])\n};\nAvatar.defaultProps = {\n    type: avatarType.TEXT,\n    shape: avatarShape.SQUARE,\n    size: avatarSize.MEDIUM,\n    fill: avatarFill.SOLID,\n    themeColor: avatarThemeColor.PRIMARY\n};\n//# sourceMappingURL=Avatar.js.map"]},"metadata":{},"sourceType":"module"}