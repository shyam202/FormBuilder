{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isLayoutComponent = isLayoutComponent;\nexports.eachComponent = eachComponent;\nexports.matchComponent = matchComponent;\nexports.getComponent = getComponent;\nexports.searchComponents = searchComponents;\nexports.findComponents = findComponents;\nexports.findComponent = findComponent;\nexports.removeComponent = removeComponent;\nexports.generateFormChange = generateFormChange;\nexports.applyFormChanges = applyFormChanges;\nexports.flattenComponents = flattenComponents;\nexports.hasCondition = hasCondition;\nexports.parseFloatExt = parseFloatExt;\nexports.formatAsCurrency = formatAsCurrency;\nexports.escapeRegExCharacters = escapeRegExCharacters;\nexports.getValue = getValue;\nexports.getStrings = getStrings;\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _set = _interopRequireDefault(require(\"lodash/set\"));\n\nvar _has = _interopRequireDefault(require(\"lodash/has\"));\n\nvar _clone = _interopRequireDefault(require(\"lodash/clone\"));\n\nvar _forOwn = _interopRequireDefault(require(\"lodash/forOwn\"));\n\nvar _isString = _interopRequireDefault(require(\"lodash/isString\"));\n\nvar _isNaN = _interopRequireDefault(require(\"lodash/isNaN\"));\n\nvar _isNil = _interopRequireDefault(require(\"lodash/isNil\"));\n\nvar _isPlainObject = _interopRequireDefault(require(\"lodash/isPlainObject\"));\n\nvar _round = _interopRequireDefault(require(\"lodash/round\"));\n\nvar _chunk = _interopRequireDefault(require(\"lodash/chunk\"));\n\nvar _pad = _interopRequireDefault(require(\"lodash/pad\"));\n\nvar _fastJsonPatch = require(\"fast-json-patch\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Determine if a component is a layout component or not.\n *\n * @param {Object} component\n *   The component to check.\n *\n * @returns {Boolean}\n *   Whether or not the component is a layout component.\n */\n\n\nfunction isLayoutComponent(component) {\n  return Boolean(component.columns && Array.isArray(component.columns) || component.rows && Array.isArray(component.rows) || component.components && Array.isArray(component.components));\n}\n/**\n * Iterate through each component within a form.\n *\n * @param {Object} components\n *   The components to iterate.\n * @param {Function} fn\n *   The iteration function to invoke for each component.\n * @param {Boolean} includeAll\n *   Whether or not to include layout components.\n * @param {String} path\n *   The current data path of the element. Example: data.user.firstName\n * @param {Object} parent\n *   The parent object.\n */\n\n\nfunction eachComponent(components, fn, includeAll, path, parent) {\n  if (!components) return;\n  path = path || '';\n  components.forEach(function (component) {\n    if (!component) {\n      return;\n    }\n\n    var hasColumns = component.columns && Array.isArray(component.columns);\n    var hasRows = component.rows && Array.isArray(component.rows);\n    var hasComps = component.components && Array.isArray(component.components);\n    var noRecurse = false;\n    var newPath = component.key ? path ? \"\".concat(path, \".\").concat(component.key) : component.key : ''; // Keep track of parent references.\n\n    if (parent) {\n      // Ensure we don't create infinite JSON structures.\n      component.parent = (0, _clone.default)(parent);\n      delete component.parent.components;\n      delete component.parent.componentMap;\n      delete component.parent.columns;\n      delete component.parent.rows;\n    } // there's no need to add other layout components here because we expect that those would either have columns, rows or components\n\n\n    var layoutTypes = ['htmlelement', 'content'];\n    var isLayoutComponent = hasColumns || hasRows || hasComps && !component.input || layoutTypes.indexOf(component.type) > -1;\n\n    if (includeAll || component.tree || !isLayoutComponent) {\n      noRecurse = fn(component, newPath, components);\n    }\n\n    var subPath = function subPath() {\n      if (component.key && !['panel', 'table', 'well', 'columns', 'fieldset', 'tabs', 'form'].includes(component.type) && (['datagrid', 'container', 'editgrid', 'address', 'dynamicWizard'].includes(component.type) || component.tree)) {\n        return newPath;\n      } else if (component.key && component.type === 'form') {\n        return \"\".concat(newPath, \".data\");\n      }\n\n      return path;\n    };\n\n    if (!noRecurse) {\n      if (hasColumns) {\n        component.columns.forEach(function (column) {\n          return eachComponent(column.components, fn, includeAll, subPath(), parent ? component : null);\n        });\n      } else if (hasRows) {\n        component.rows.forEach(function (row) {\n          if (Array.isArray(row)) {\n            row.forEach(function (column) {\n              return eachComponent(column.components, fn, includeAll, subPath(), parent ? component : null);\n            });\n          }\n        });\n      } else if (hasComps) {\n        eachComponent(component.components, fn, includeAll, subPath(), parent ? component : null);\n      }\n    }\n  });\n}\n/**\n * Matches if a component matches the query.\n *\n * @param component\n * @param query\n * @return {boolean}\n */\n\n\nfunction matchComponent(component, query) {\n  if ((0, _isString.default)(query)) {\n    return component.key === query || component.path === query;\n  } else {\n    var matches = false;\n    (0, _forOwn.default)(query, function (value, key) {\n      matches = (0, _get.default)(component, key) === value;\n\n      if (!matches) {\n        return false;\n      }\n    });\n    return matches;\n  }\n}\n/**\n * Get a component by its key\n *\n * @param {Object} components\n *   The components to iterate.\n * @param {String|Object} key\n *   The key of the component to get, or a query of the component to search.\n *\n * @returns {Object}\n *   The component that matches the given key, or undefined if not found.\n */\n\n\nfunction getComponent(components, key, includeAll) {\n  var result;\n  eachComponent(components, function (component, path) {\n    if (path === key || component.path === key) {\n      result = component;\n      return true;\n    }\n  }, includeAll);\n  return result;\n}\n/**\n * Finds a component provided a query of properties of that component.\n *\n * @param components\n * @param query\n * @return {*}\n */\n\n\nfunction searchComponents(components, query) {\n  var results = [];\n  eachComponent(components, function (component) {\n    if (matchComponent(component, query)) {\n      results.push(component);\n    }\n  }, true);\n  return results;\n}\n/**\n * Deprecated version of findComponents. Renamed to searchComponents.\n *\n * @param components\n * @param query\n * @returns {*}\n */\n\n\nfunction findComponents(components, query) {\n  console.warn('formio.js/utils findComponents is deprecated. Use searchComponents instead.');\n  return searchComponents(components, query);\n}\n/**\n * This function will find a component in a form and return the component AND THE PATH to the component in the form.\n * Path to the component is stored as an array of nested components and their indexes.The Path is being filled recursively\n * when you iterating through the nested structure.\n * If the component is not found the callback won't be called and function won't return anything.\n *\n * @param components\n * @param key\n * @param fn\n * @param path\n * @returns {*}\n */\n\n\nfunction findComponent(components, key, path, fn) {\n  if (!components) return;\n  path = path || [];\n\n  if (!key) {\n    return fn(components);\n  }\n\n  components.forEach(function (component, index) {\n    var newPath = path.slice(); // Add an index of the component it iterates through in nested structure\n\n    newPath.push(index);\n    if (!component) return;\n\n    if (component.hasOwnProperty('columns') && Array.isArray(component.columns)) {\n      newPath.push('columns');\n      component.columns.forEach(function (column, index) {\n        var colPath = newPath.slice();\n        colPath.push(index);\n        colPath.push('components');\n        findComponent(column.components, key, colPath, fn);\n      });\n    }\n\n    if (component.hasOwnProperty('rows') && Array.isArray(component.rows)) {\n      newPath.push('rows');\n      component.rows.forEach(function (row, index) {\n        var rowPath = newPath.slice();\n        rowPath.push(index);\n        row.forEach(function (column, index) {\n          var colPath = rowPath.slice();\n          colPath.push(index);\n          colPath.push('components');\n          findComponent(column.components, key, colPath, fn);\n        });\n      });\n    }\n\n    if (component.hasOwnProperty('components') && Array.isArray(component.components)) {\n      newPath.push('components');\n      findComponent(component.components, key, newPath, fn);\n    }\n\n    if (component.key === key) {\n      //Final callback if the component is found\n      fn(component, newPath, components);\n    }\n  });\n}\n/**\n * Remove a component by path.\n *\n * @param components\n * @param path\n */\n\n\nfunction removeComponent(components, path) {\n  // Using _.unset() leave a null value. Use Array splice instead.\n  var index = path.pop();\n\n  if (path.length !== 0) {\n    components = (0, _get.default)(components, path);\n  }\n\n  components.splice(index, 1);\n}\n\nfunction generateFormChange(type, data) {\n  var change;\n\n  switch (type) {\n    case 'add':\n      change = {\n        op: 'add',\n        key: data.component.key,\n        container: data.parent.key,\n        // Parent component\n        path: data.path,\n        // Path to container within parent component.\n        index: data.index,\n        // Index of component in parent container.\n        component: data.component\n      };\n      break;\n\n    case 'edit':\n      change = {\n        op: 'edit',\n        key: data.originalComponent.key,\n        patches: (0, _fastJsonPatch.compare)(data.originalComponent, data.component)\n      }; // Don't save if nothing changed.\n\n      if (!change.patches.length) {\n        change = null;\n      }\n\n      break;\n\n    case 'remove':\n      change = {\n        op: 'remove',\n        key: data.component.key\n      };\n      break;\n  }\n\n  return change;\n}\n\nfunction applyFormChanges(form, changes) {\n  var failed = [];\n  changes.forEach(function (change) {\n    var found = false;\n\n    switch (change.op) {\n      case 'add':\n        var newComponent = change.component; // Find the container to set the component in.\n\n        findComponent(form.components, change.container, null, function (parent) {\n          if (!change.container) {\n            parent = form;\n          } // A move will first run an add so remove any existing components with matching key before inserting.\n\n\n          findComponent(form.components, change.key, null, function (component, path) {\n            // If found, use the existing component. (If someone else edited it, the changes would be here)\n            newComponent = component;\n            removeComponent(form.components, path);\n          });\n          found = true;\n          var container = (0, _get.default)(parent, change.path);\n          container.splice(change.index, 0, newComponent);\n        });\n        break;\n\n      case 'remove':\n        findComponent(form.components, change.key, null, function (component, path) {\n          found = true;\n          var oldComponent = (0, _get.default)(form.components, path);\n\n          if (oldComponent.key !== component.key) {\n            path.pop();\n          }\n\n          removeComponent(form.components, path);\n        });\n        break;\n\n      case 'edit':\n        findComponent(form.components, change.key, null, function (component, path) {\n          found = true;\n\n          try {\n            var oldComponent = (0, _get.default)(form.components, path);\n            var _newComponent = (0, _fastJsonPatch.applyPatch)(component, change.patches).newDocument;\n\n            if (oldComponent.key !== _newComponent.key) {\n              path.pop();\n            }\n\n            (0, _set.default)(form.components, path, _newComponent);\n          } catch (err) {\n            failed.push(change);\n          }\n        });\n        break;\n\n      case 'move':\n        break;\n    }\n\n    if (!found) {\n      failed.push(change);\n    }\n  });\n  return {\n    form: form,\n    failed: failed\n  };\n}\n/**\n * Flatten the form components for data manipulation.\n *\n * @param {Object} components\n *   The components to iterate.\n * @param {Boolean} includeAll\n *   Whether or not to include layout components.\n *\n * @returns {Object}\n *   The flattened components map.\n */\n\n\nfunction flattenComponents(components, includeAll) {\n  var flattened = {};\n  eachComponent(components, function (component, path) {\n    flattened[path] = component;\n  }, includeAll);\n  return flattened;\n}\n/**\n * Returns if this component has a conditional statement.\n *\n * @param component - The component JSON schema.\n *\n * @returns {boolean} - TRUE - This component has a conditional, FALSE - No conditional provided.\n */\n\n\nfunction hasCondition(component) {\n  return Boolean(component.customConditional || component.conditional && component.conditional.when || component.conditional && component.conditional.json);\n}\n/**\n * Extension of standard #parseFloat(value) function, that also clears input string.\n *\n * @param {any} value\n *   The value to parse.\n *\n * @returns {Number}\n *   Parsed value.\n */\n\n\nfunction parseFloatExt(value) {\n  return parseFloat((0, _isString.default)(value) ? value.replace(/[^\\de.+-]/gi, '') : value);\n}\n/**\n * Formats provided value in way how Currency component uses it.\n *\n * @param {any} value\n *   The value to format.\n *\n * @returns {String}\n *   Value formatted for Currency component.\n */\n\n\nfunction formatAsCurrency(value) {\n  var parsedValue = parseFloatExt(value);\n\n  if ((0, _isNaN.default)(parsedValue)) {\n    return '';\n  }\n\n  var parts = (0, _round.default)(parsedValue, 2).toString().split('.');\n  parts[0] = (0, _chunk.default)(Array.from(parts[0]).reverse(), 3).reverse().map(function (part) {\n    return part.reverse().join('');\n  }).join(',');\n  parts[1] = (0, _pad.default)(parts[1], 2, '0');\n  return parts.join('.');\n}\n/**\n * Escapes RegEx characters in provided String value.\n *\n * @param {String} value\n *   String for escaping RegEx characters.\n * @returns {string}\n *   String with escaped RegEx characters.\n */\n\n\nfunction escapeRegExCharacters(value) {\n  return value.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&');\n}\n/**\n * Get the value for a component key, in the given submission.\n *\n * @param {Object} submission\n *   A submission object to search.\n * @param {String} key\n *   A for components API key to search for.\n */\n\n\nfunction getValue(submission, key) {\n  var search = function search(data) {\n    if ((0, _isPlainObject.default)(data)) {\n      if ((0, _has.default)(data, key)) {\n        return _lodash.default.get(data, key);\n      }\n\n      var value = null;\n      (0, _forOwn.default)(data, function (prop) {\n        var result = search(prop);\n\n        if (!(0, _isNil.default)(result)) {\n          value = result;\n          return false;\n        }\n      });\n      return value;\n    } else {\n      return null;\n    }\n  };\n\n  return search(submission.data);\n}\n/**\n * Iterate over all components in a form and get string values for translation.\n * @param form\n */\n\n\nfunction getStrings(form) {\n  var properties = ['label', 'title', 'legend', 'tooltip', 'description', 'placeholder', 'prefix', 'suffix', 'errorLabel', 'content', 'html'];\n  var strings = [];\n  eachComponent(form.components, function (component) {\n    properties.forEach(function (property) {\n      if (component.hasOwnProperty(property) && component[property]) {\n        strings.push({\n          key: component.key,\n          type: component.type,\n          property: property,\n          string: component[property]\n        });\n      }\n    });\n\n    if ((!component.dataSrc || component.dataSrc === 'values') && component.hasOwnProperty('values') && Array.isArray(component.values) && component.values.length) {\n      component.values.forEach(function (value, index) {\n        strings.push({\n          key: component.key,\n          property: \"value[\".concat(index, \"].label\"),\n          string: component.values[index].label\n        });\n      });\n    } // Hard coded values from Day component\n\n\n    if (component.type === 'day') {\n      ['day', 'month', 'year', 'Day', 'Month', 'Year', 'january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'].forEach(function (string) {\n        strings.push({\n          key: component.key,\n          property: 'day',\n          string: string\n        });\n      });\n\n      if (component.fields.day.placeholder) {\n        strings.push({\n          key: component.key,\n          property: 'fields.day.placeholder',\n          string: component.fields.day.placeholder\n        });\n      }\n\n      if (component.fields.month.placeholder) {\n        strings.push({\n          key: component.key,\n          property: 'fields.month.placeholder',\n          string: component.fields.month.placeholder\n        });\n      }\n\n      if (component.fields.year.placeholder) {\n        strings.push({\n          key: component.key,\n          property: 'fields.year.placeholder',\n          string: component.fields.year.placeholder\n        });\n      }\n    }\n\n    if (component.type === 'editgrid') {\n      var string = component.addAnother || 'Add Another';\n\n      if (component.addAnother) {\n        strings.push({\n          key: component.key,\n          property: 'addAnother',\n          string: string\n        });\n      }\n    }\n\n    if (component.type === 'select') {\n      ['loading...', 'Type to search'].forEach(function (string) {\n        strings.push({\n          key: component.key,\n          property: 'select',\n          string: string\n        });\n      });\n    }\n  }, true);\n  return strings;\n}","map":{"version":3,"sources":["C:/Users/ShyamLakhani/Desktop/my-app/node_modules/formiojs/utils/formUtils.js"],"names":["Object","defineProperty","exports","value","isLayoutComponent","eachComponent","matchComponent","getComponent","searchComponents","findComponents","findComponent","removeComponent","generateFormChange","applyFormChanges","flattenComponents","hasCondition","parseFloatExt","formatAsCurrency","escapeRegExCharacters","getValue","getStrings","_get","_interopRequireDefault","require","_set","_has","_clone","_forOwn","_isString","_isNaN","_isNil","_isPlainObject","_round","_chunk","_pad","_fastJsonPatch","_lodash","obj","__esModule","default","component","Boolean","columns","Array","isArray","rows","components","fn","includeAll","path","parent","forEach","hasColumns","hasRows","hasComps","noRecurse","newPath","key","concat","componentMap","layoutTypes","input","indexOf","type","tree","subPath","includes","column","row","query","matches","result","results","push","console","warn","index","slice","hasOwnProperty","colPath","rowPath","pop","length","splice","data","change","op","container","originalComponent","patches","compare","form","changes","failed","found","newComponent","oldComponent","_newComponent","applyPatch","newDocument","err","flattened","customConditional","conditional","when","json","parseFloat","replace","parsedValue","parts","toString","split","from","reverse","map","part","join","submission","search","get","prop","properties","strings","property","string","dataSrc","values","label","fields","day","placeholder","month","year","addAnother"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isLayoutComponent = isLayoutComponent;\nexports.eachComponent = eachComponent;\nexports.matchComponent = matchComponent;\nexports.getComponent = getComponent;\nexports.searchComponents = searchComponents;\nexports.findComponents = findComponents;\nexports.findComponent = findComponent;\nexports.removeComponent = removeComponent;\nexports.generateFormChange = generateFormChange;\nexports.applyFormChanges = applyFormChanges;\nexports.flattenComponents = flattenComponents;\nexports.hasCondition = hasCondition;\nexports.parseFloatExt = parseFloatExt;\nexports.formatAsCurrency = formatAsCurrency;\nexports.escapeRegExCharacters = escapeRegExCharacters;\nexports.getValue = getValue;\nexports.getStrings = getStrings;\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nrequire(\"core-js/modules/es.array.splice.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.string.replace.js\");\n\nrequire(\"core-js/modules/es.string.split.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.array.from.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/es.array.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _set = _interopRequireDefault(require(\"lodash/set\"));\n\nvar _has = _interopRequireDefault(require(\"lodash/has\"));\n\nvar _clone = _interopRequireDefault(require(\"lodash/clone\"));\n\nvar _forOwn = _interopRequireDefault(require(\"lodash/forOwn\"));\n\nvar _isString = _interopRequireDefault(require(\"lodash/isString\"));\n\nvar _isNaN = _interopRequireDefault(require(\"lodash/isNaN\"));\n\nvar _isNil = _interopRequireDefault(require(\"lodash/isNil\"));\n\nvar _isPlainObject = _interopRequireDefault(require(\"lodash/isPlainObject\"));\n\nvar _round = _interopRequireDefault(require(\"lodash/round\"));\n\nvar _chunk = _interopRequireDefault(require(\"lodash/chunk\"));\n\nvar _pad = _interopRequireDefault(require(\"lodash/pad\"));\n\nvar _fastJsonPatch = require(\"fast-json-patch\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Determine if a component is a layout component or not.\n *\n * @param {Object} component\n *   The component to check.\n *\n * @returns {Boolean}\n *   Whether or not the component is a layout component.\n */\nfunction isLayoutComponent(component) {\n  return Boolean(component.columns && Array.isArray(component.columns) || component.rows && Array.isArray(component.rows) || component.components && Array.isArray(component.components));\n}\n/**\n * Iterate through each component within a form.\n *\n * @param {Object} components\n *   The components to iterate.\n * @param {Function} fn\n *   The iteration function to invoke for each component.\n * @param {Boolean} includeAll\n *   Whether or not to include layout components.\n * @param {String} path\n *   The current data path of the element. Example: data.user.firstName\n * @param {Object} parent\n *   The parent object.\n */\n\n\nfunction eachComponent(components, fn, includeAll, path, parent) {\n  if (!components) return;\n  path = path || '';\n  components.forEach(function (component) {\n    if (!component) {\n      return;\n    }\n\n    var hasColumns = component.columns && Array.isArray(component.columns);\n    var hasRows = component.rows && Array.isArray(component.rows);\n    var hasComps = component.components && Array.isArray(component.components);\n    var noRecurse = false;\n    var newPath = component.key ? path ? \"\".concat(path, \".\").concat(component.key) : component.key : ''; // Keep track of parent references.\n\n    if (parent) {\n      // Ensure we don't create infinite JSON structures.\n      component.parent = (0, _clone.default)(parent);\n      delete component.parent.components;\n      delete component.parent.componentMap;\n      delete component.parent.columns;\n      delete component.parent.rows;\n    } // there's no need to add other layout components here because we expect that those would either have columns, rows or components\n\n\n    var layoutTypes = ['htmlelement', 'content'];\n    var isLayoutComponent = hasColumns || hasRows || hasComps && !component.input || layoutTypes.indexOf(component.type) > -1;\n\n    if (includeAll || component.tree || !isLayoutComponent) {\n      noRecurse = fn(component, newPath, components);\n    }\n\n    var subPath = function subPath() {\n      if (component.key && !['panel', 'table', 'well', 'columns', 'fieldset', 'tabs', 'form'].includes(component.type) && (['datagrid', 'container', 'editgrid', 'address', 'dynamicWizard'].includes(component.type) || component.tree)) {\n        return newPath;\n      } else if (component.key && component.type === 'form') {\n        return \"\".concat(newPath, \".data\");\n      }\n\n      return path;\n    };\n\n    if (!noRecurse) {\n      if (hasColumns) {\n        component.columns.forEach(function (column) {\n          return eachComponent(column.components, fn, includeAll, subPath(), parent ? component : null);\n        });\n      } else if (hasRows) {\n        component.rows.forEach(function (row) {\n          if (Array.isArray(row)) {\n            row.forEach(function (column) {\n              return eachComponent(column.components, fn, includeAll, subPath(), parent ? component : null);\n            });\n          }\n        });\n      } else if (hasComps) {\n        eachComponent(component.components, fn, includeAll, subPath(), parent ? component : null);\n      }\n    }\n  });\n}\n/**\n * Matches if a component matches the query.\n *\n * @param component\n * @param query\n * @return {boolean}\n */\n\n\nfunction matchComponent(component, query) {\n  if ((0, _isString.default)(query)) {\n    return component.key === query || component.path === query;\n  } else {\n    var matches = false;\n    (0, _forOwn.default)(query, function (value, key) {\n      matches = (0, _get.default)(component, key) === value;\n\n      if (!matches) {\n        return false;\n      }\n    });\n    return matches;\n  }\n}\n/**\n * Get a component by its key\n *\n * @param {Object} components\n *   The components to iterate.\n * @param {String|Object} key\n *   The key of the component to get, or a query of the component to search.\n *\n * @returns {Object}\n *   The component that matches the given key, or undefined if not found.\n */\n\n\nfunction getComponent(components, key, includeAll) {\n  var result;\n  eachComponent(components, function (component, path) {\n    if (path === key || component.path === key) {\n      result = component;\n      return true;\n    }\n  }, includeAll);\n  return result;\n}\n/**\n * Finds a component provided a query of properties of that component.\n *\n * @param components\n * @param query\n * @return {*}\n */\n\n\nfunction searchComponents(components, query) {\n  var results = [];\n  eachComponent(components, function (component) {\n    if (matchComponent(component, query)) {\n      results.push(component);\n    }\n  }, true);\n  return results;\n}\n/**\n * Deprecated version of findComponents. Renamed to searchComponents.\n *\n * @param components\n * @param query\n * @returns {*}\n */\n\n\nfunction findComponents(components, query) {\n  console.warn('formio.js/utils findComponents is deprecated. Use searchComponents instead.');\n  return searchComponents(components, query);\n}\n/**\n * This function will find a component in a form and return the component AND THE PATH to the component in the form.\n * Path to the component is stored as an array of nested components and their indexes.The Path is being filled recursively\n * when you iterating through the nested structure.\n * If the component is not found the callback won't be called and function won't return anything.\n *\n * @param components\n * @param key\n * @param fn\n * @param path\n * @returns {*}\n */\n\n\nfunction findComponent(components, key, path, fn) {\n  if (!components) return;\n  path = path || [];\n\n  if (!key) {\n    return fn(components);\n  }\n\n  components.forEach(function (component, index) {\n    var newPath = path.slice(); // Add an index of the component it iterates through in nested structure\n\n    newPath.push(index);\n    if (!component) return;\n\n    if (component.hasOwnProperty('columns') && Array.isArray(component.columns)) {\n      newPath.push('columns');\n      component.columns.forEach(function (column, index) {\n        var colPath = newPath.slice();\n        colPath.push(index);\n        colPath.push('components');\n        findComponent(column.components, key, colPath, fn);\n      });\n    }\n\n    if (component.hasOwnProperty('rows') && Array.isArray(component.rows)) {\n      newPath.push('rows');\n      component.rows.forEach(function (row, index) {\n        var rowPath = newPath.slice();\n        rowPath.push(index);\n        row.forEach(function (column, index) {\n          var colPath = rowPath.slice();\n          colPath.push(index);\n          colPath.push('components');\n          findComponent(column.components, key, colPath, fn);\n        });\n      });\n    }\n\n    if (component.hasOwnProperty('components') && Array.isArray(component.components)) {\n      newPath.push('components');\n      findComponent(component.components, key, newPath, fn);\n    }\n\n    if (component.key === key) {\n      //Final callback if the component is found\n      fn(component, newPath, components);\n    }\n  });\n}\n/**\n * Remove a component by path.\n *\n * @param components\n * @param path\n */\n\n\nfunction removeComponent(components, path) {\n  // Using _.unset() leave a null value. Use Array splice instead.\n  var index = path.pop();\n\n  if (path.length !== 0) {\n    components = (0, _get.default)(components, path);\n  }\n\n  components.splice(index, 1);\n}\n\nfunction generateFormChange(type, data) {\n  var change;\n\n  switch (type) {\n    case 'add':\n      change = {\n        op: 'add',\n        key: data.component.key,\n        container: data.parent.key,\n        // Parent component\n        path: data.path,\n        // Path to container within parent component.\n        index: data.index,\n        // Index of component in parent container.\n        component: data.component\n      };\n      break;\n\n    case 'edit':\n      change = {\n        op: 'edit',\n        key: data.originalComponent.key,\n        patches: (0, _fastJsonPatch.compare)(data.originalComponent, data.component)\n      }; // Don't save if nothing changed.\n\n      if (!change.patches.length) {\n        change = null;\n      }\n\n      break;\n\n    case 'remove':\n      change = {\n        op: 'remove',\n        key: data.component.key\n      };\n      break;\n  }\n\n  return change;\n}\n\nfunction applyFormChanges(form, changes) {\n  var failed = [];\n  changes.forEach(function (change) {\n    var found = false;\n\n    switch (change.op) {\n      case 'add':\n        var newComponent = change.component; // Find the container to set the component in.\n\n        findComponent(form.components, change.container, null, function (parent) {\n          if (!change.container) {\n            parent = form;\n          } // A move will first run an add so remove any existing components with matching key before inserting.\n\n\n          findComponent(form.components, change.key, null, function (component, path) {\n            // If found, use the existing component. (If someone else edited it, the changes would be here)\n            newComponent = component;\n            removeComponent(form.components, path);\n          });\n          found = true;\n          var container = (0, _get.default)(parent, change.path);\n          container.splice(change.index, 0, newComponent);\n        });\n        break;\n\n      case 'remove':\n        findComponent(form.components, change.key, null, function (component, path) {\n          found = true;\n          var oldComponent = (0, _get.default)(form.components, path);\n\n          if (oldComponent.key !== component.key) {\n            path.pop();\n          }\n\n          removeComponent(form.components, path);\n        });\n        break;\n\n      case 'edit':\n        findComponent(form.components, change.key, null, function (component, path) {\n          found = true;\n\n          try {\n            var oldComponent = (0, _get.default)(form.components, path);\n            var _newComponent = (0, _fastJsonPatch.applyPatch)(component, change.patches).newDocument;\n\n            if (oldComponent.key !== _newComponent.key) {\n              path.pop();\n            }\n\n            (0, _set.default)(form.components, path, _newComponent);\n          } catch (err) {\n            failed.push(change);\n          }\n        });\n        break;\n\n      case 'move':\n        break;\n    }\n\n    if (!found) {\n      failed.push(change);\n    }\n  });\n  return {\n    form: form,\n    failed: failed\n  };\n}\n/**\n * Flatten the form components for data manipulation.\n *\n * @param {Object} components\n *   The components to iterate.\n * @param {Boolean} includeAll\n *   Whether or not to include layout components.\n *\n * @returns {Object}\n *   The flattened components map.\n */\n\n\nfunction flattenComponents(components, includeAll) {\n  var flattened = {};\n  eachComponent(components, function (component, path) {\n    flattened[path] = component;\n  }, includeAll);\n  return flattened;\n}\n/**\n * Returns if this component has a conditional statement.\n *\n * @param component - The component JSON schema.\n *\n * @returns {boolean} - TRUE - This component has a conditional, FALSE - No conditional provided.\n */\n\n\nfunction hasCondition(component) {\n  return Boolean(component.customConditional || component.conditional && component.conditional.when || component.conditional && component.conditional.json);\n}\n/**\n * Extension of standard #parseFloat(value) function, that also clears input string.\n *\n * @param {any} value\n *   The value to parse.\n *\n * @returns {Number}\n *   Parsed value.\n */\n\n\nfunction parseFloatExt(value) {\n  return parseFloat((0, _isString.default)(value) ? value.replace(/[^\\de.+-]/gi, '') : value);\n}\n/**\n * Formats provided value in way how Currency component uses it.\n *\n * @param {any} value\n *   The value to format.\n *\n * @returns {String}\n *   Value formatted for Currency component.\n */\n\n\nfunction formatAsCurrency(value) {\n  var parsedValue = parseFloatExt(value);\n\n  if ((0, _isNaN.default)(parsedValue)) {\n    return '';\n  }\n\n  var parts = (0, _round.default)(parsedValue, 2).toString().split('.');\n  parts[0] = (0, _chunk.default)(Array.from(parts[0]).reverse(), 3).reverse().map(function (part) {\n    return part.reverse().join('');\n  }).join(',');\n  parts[1] = (0, _pad.default)(parts[1], 2, '0');\n  return parts.join('.');\n}\n/**\n * Escapes RegEx characters in provided String value.\n *\n * @param {String} value\n *   String for escaping RegEx characters.\n * @returns {string}\n *   String with escaped RegEx characters.\n */\n\n\nfunction escapeRegExCharacters(value) {\n  return value.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&');\n}\n/**\n * Get the value for a component key, in the given submission.\n *\n * @param {Object} submission\n *   A submission object to search.\n * @param {String} key\n *   A for components API key to search for.\n */\n\n\nfunction getValue(submission, key) {\n  var search = function search(data) {\n    if ((0, _isPlainObject.default)(data)) {\n      if ((0, _has.default)(data, key)) {\n        return _lodash.default.get(data, key);\n      }\n\n      var value = null;\n      (0, _forOwn.default)(data, function (prop) {\n        var result = search(prop);\n\n        if (!(0, _isNil.default)(result)) {\n          value = result;\n          return false;\n        }\n      });\n      return value;\n    } else {\n      return null;\n    }\n  };\n\n  return search(submission.data);\n}\n/**\n * Iterate over all components in a form and get string values for translation.\n * @param form\n */\n\n\nfunction getStrings(form) {\n  var properties = ['label', 'title', 'legend', 'tooltip', 'description', 'placeholder', 'prefix', 'suffix', 'errorLabel', 'content', 'html'];\n  var strings = [];\n  eachComponent(form.components, function (component) {\n    properties.forEach(function (property) {\n      if (component.hasOwnProperty(property) && component[property]) {\n        strings.push({\n          key: component.key,\n          type: component.type,\n          property: property,\n          string: component[property]\n        });\n      }\n    });\n\n    if ((!component.dataSrc || component.dataSrc === 'values') && component.hasOwnProperty('values') && Array.isArray(component.values) && component.values.length) {\n      component.values.forEach(function (value, index) {\n        strings.push({\n          key: component.key,\n          property: \"value[\".concat(index, \"].label\"),\n          string: component.values[index].label\n        });\n      });\n    } // Hard coded values from Day component\n\n\n    if (component.type === 'day') {\n      ['day', 'month', 'year', 'Day', 'Month', 'Year', 'january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'].forEach(function (string) {\n        strings.push({\n          key: component.key,\n          property: 'day',\n          string: string\n        });\n      });\n\n      if (component.fields.day.placeholder) {\n        strings.push({\n          key: component.key,\n          property: 'fields.day.placeholder',\n          string: component.fields.day.placeholder\n        });\n      }\n\n      if (component.fields.month.placeholder) {\n        strings.push({\n          key: component.key,\n          property: 'fields.month.placeholder',\n          string: component.fields.month.placeholder\n        });\n      }\n\n      if (component.fields.year.placeholder) {\n        strings.push({\n          key: component.key,\n          property: 'fields.year.placeholder',\n          string: component.fields.year.placeholder\n        });\n      }\n    }\n\n    if (component.type === 'editgrid') {\n      var string = component.addAnother || 'Add Another';\n\n      if (component.addAnother) {\n        strings.push({\n          key: component.key,\n          property: 'addAnother',\n          string: string\n        });\n      }\n    }\n\n    if (component.type === 'select') {\n      ['loading...', 'Type to search'].forEach(function (string) {\n        strings.push({\n          key: component.key,\n          property: 'select',\n          string: string\n        });\n      });\n    }\n  }, true);\n  return strings;\n}"]},"metadata":{},"sourceType":"script"}