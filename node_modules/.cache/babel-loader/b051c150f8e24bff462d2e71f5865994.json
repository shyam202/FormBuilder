{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ShyamLakhani\\\\Desktop\\\\my-app\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\n// // ICONS\n// import * as FaIcons from \"react-icons/fa\"; //Now i get access to all the icons\n// import * as AiIcons from \"react-icons/ai\";\n// import { IconContext } from \"react-icons\";\n// // ROUTING\n// import { Link } from \"react-router-dom\";\n// // DATA FILE\n// import { SidebarData } from \"./SidebarData\";\n// // STYLES\n// import \"./Navbar.css\";\n// export default function Navbar() {\n//   const [sidebar, setSidebar] = useState(false);\n//   const showSidebar = () => setSidebar(!sidebar);\n//   return (\n//     <>\n//       <IconContext.Provider value={{ color: \"#FFF\" }}>\n//         {/* All the icons now are white */}\n//         <div className=\"navbar\">\n//           <Link to=\"#\" className=\"menu-bars\">\n//             <FaIcons.FaBars onClick={showSidebar} />\n//           </Link>\n//         </div>\n//         <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\n//           <ul className=\"nav-menu-items\" onClick={showSidebar}>\n//             <li className=\"navbar-toggle\">\n//               <Link to=\"#\" className=\"menu-bars\">\n//                 <AiIcons.AiOutlineClose />\n//               </Link>\n//             </li>\n//             {SidebarData.map((item, index) => {\n//               return (\n//                 <li key={index} className={item.cName}>\n//                   <Link to={item.path}>\n//                     {item.icon}\n//                     <span>{item.title}</span>\n//                   </Link>\n//                 </li>\n//               );\n//             })}\n//           </ul>\n//         </nav>\n//       </IconContext.Provider>\n//     </>\n//   );\n// }\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240; // const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: 'flex',\n//     },\n//   appBar: {\n//     zIndex: theme.zIndex.drawer + 1,\n//     transition: theme.transitions.create(['width', 'margin'], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//   },\n//   appBarShift: {\n//     marginLeft: drawerWidth,\n//     width: `calc(100% - ${drawerWidth}px)`,\n//     transition: theme.transitions.create(['width', 'margin'], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   },\n//   menuButton: {\n//     marginRight: 850,\n//   },\n//   hide: {\n//     display: 'none',\n//   },\n//   drawer: {\n//     width: drawerWidth,\n//     flexShrink: 0,\n//     whiteSpace: 'nowrap',\n//   },\n//   drawerOpen: {\n//     width: drawerWidth,\n//     transition: theme.transitions.create('width', {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   },\n//   drawerClose: {\n//     transition: theme.transitions.create('width', {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//     overflowX: 'hidden',\n//     width: theme.spacing(7) + 1,\n//     [theme.breakpoints.up('sm')]: {\n//       width: theme.spacing(9) + 1,\n//     },\n//   },\n//   toolbar: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'flex-end',\n//     padding: theme.spacing(0, 1),\n//     // necessary for content to be below app bar\n//     ...theme.mixins.toolbar,\n//   },\n//   content: {\n//     flexGrow: 1,\n//     padding: theme.spacing(3),\n//   },\n// }));\n\nexport default function MiniDrawer() {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      style: {\n        backgroundColor: \"#000000\"\n      },\n      position: \"fixed\",\n      className: clsx(classes.appBar, {\n        [classes.appBarShift]: open\n      }),\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          edge: \"start\",\n          className: clsx(classes.menuButton, {\n            [classes.hide]: open\n          }),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          noWrap: true,\n          children: \"FORM BUILDER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      className: clsx(classes.drawer, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open\n      }),\n      classes: {\n        paper: clsx({\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open\n        })\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbar,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 48\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 48\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MiniDrawer, \"Adchr2xZCpHvRdMq2Jjo+bPE43s=\", true, function () {\n  return [useTheme];\n});\n\n_c = MiniDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MiniDrawer\");","map":{"version":3,"sources":["C:/Users/ShyamLakhani/Desktop/my-app/src/components/Navbar.js"],"names":["React","clsx","makeStyles","useTheme","Drawer","AppBar","Toolbar","List","CssBaseline","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","drawerWidth","MiniDrawer","classes","useStyles","theme","open","setOpen","useState","handleDrawerOpen","handleDrawerClose","root","backgroundColor","appBar","appBarShift","menuButton","hide","drawer","drawerOpen","drawerClose","paper","toolbar","direction","map","text","index","content"],"mappings":";;;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,WAAW,GAAG,GAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAMC,OAAO,GAAGC,SAAS,EAAzB;A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","sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// // ICONS\r\n// import * as FaIcons from \"react-icons/fa\"; //Now i get access to all the icons\r\n// import * as AiIcons from \"react-icons/ai\";\r\n\r\n// import { IconContext } from \"react-icons\";\r\n\r\n// // ROUTING\r\n\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// // DATA FILE\r\n// import { SidebarData } from \"./SidebarData\";\r\n\r\n// // STYLES\r\n// import \"./Navbar.css\";\r\n\r\n// export default function Navbar() {\r\n//   const [sidebar, setSidebar] = useState(false);\r\n\r\n//   const showSidebar = () => setSidebar(!sidebar);\r\n\r\n//   return (\r\n//     <>\r\n//       <IconContext.Provider value={{ color: \"#FFF\" }}>\r\n//         {/* All the icons now are white */}\r\n//         <div className=\"navbar\">\r\n//           <Link to=\"#\" className=\"menu-bars\">\r\n//             <FaIcons.FaBars onClick={showSidebar} />\r\n//           </Link>\r\n//         </div>\r\n//         <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\r\n//           <ul className=\"nav-menu-items\" onClick={showSidebar}>\r\n//             <li className=\"navbar-toggle\">\r\n//               <Link to=\"#\" className=\"menu-bars\">\r\n//                 <AiIcons.AiOutlineClose />\r\n//               </Link>\r\n//             </li>\r\n\r\n//             {SidebarData.map((item, index) => {\r\n//               return (\r\n//                 <li key={index} className={item.cName}>\r\n//                   <Link to={item.path}>\r\n//                     {item.icon}\r\n//                     <span>{item.title}</span>\r\n//                   </Link>\r\n//                 </li>\r\n//               );\r\n//             })}\r\n//           </ul>\r\n//         </nav>\r\n//       </IconContext.Provider>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst drawerWidth = 240;\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     display: 'flex',\r\n//     },\r\n//   appBar: {\r\n//     zIndex: theme.zIndex.drawer + 1,\r\n//     transition: theme.transitions.create(['width', 'margin'], {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n     \r\n//     }),\r\n//   },\r\n//   appBarShift: {\r\n//     marginLeft: drawerWidth,\r\n//     width: `calc(100% - ${drawerWidth}px)`,\r\n//     transition: theme.transitions.create(['width', 'margin'], {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//   },\r\n//   menuButton: {\r\n//     marginRight: 850,\r\n    \r\n//   },\r\n//   hide: {\r\n//     display: 'none',\r\n//   },\r\n//   drawer: {\r\n    \r\n//     width: drawerWidth,\r\n//     flexShrink: 0,\r\n//     whiteSpace: 'nowrap',\r\n//   },\r\n//   drawerOpen: {\r\n//     width: drawerWidth,\r\n//     transition: theme.transitions.create('width', {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.enteringScreen,\r\n//     }),\r\n//   },\r\n//   drawerClose: {\r\n//     transition: theme.transitions.create('width', {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen,\r\n//     }),\r\n//     overflowX: 'hidden',\r\n//     width: theme.spacing(7) + 1,\r\n//     [theme.breakpoints.up('sm')]: {\r\n//       width: theme.spacing(9) + 1,\r\n//     },\r\n//   },\r\n//   toolbar: {\r\n//     display: 'flex',\r\n    \r\n//     alignItems: 'center',\r\n//     justifyContent: 'flex-end',\r\n//     padding: theme.spacing(0, 1),\r\n//     // necessary for content to be below app bar\r\n//     ...theme.mixins.toolbar,\r\n//   },\r\n//   content: {\r\n//     flexGrow: 1,\r\n//     padding: theme.spacing(3),\r\n//   },\r\n// }));\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        style={{\r\n          backgroundColor: \"#000000\",\r\n        }}\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h4\" noWrap>\r\n            FORM BUILDER\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n      \r\n  \r\n      </main>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}