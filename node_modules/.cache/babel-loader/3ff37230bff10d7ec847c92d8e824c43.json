{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFormioUploadAdapterPlugin = void 0;\n\nvar _utils = require(\"../../utils/utils\");\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * UploadAdapter for CKEditor https://ckeditor.com/docs/ckeditor5/latest/framework/guides/deep-dive/upload-adapter.html\n */\n\n\nvar FormioUploadAdapter = /*#__PURE__*/function () {\n  function FormioUploadAdapter(loader, fileService, component) {\n    _classCallCheck(this, FormioUploadAdapter);\n\n    this.loader = loader;\n    this.fileService = fileService;\n    this.component = component;\n  }\n\n  _createClass(FormioUploadAdapter, [{\n    key: \"upload\",\n    value: function upload() {\n      var _this = this;\n\n      return this.loader.file.then(function (file) {\n        return new _nativePromiseOnly.default(function (resolve, reject) {\n          var _this$fileService;\n\n          var _this$component$compo = _this.component.component,\n              uploadStorage = _this$component$compo.uploadStorage,\n              uploadUrl = _this$component$compo.uploadUrl,\n              uploadOptions = _this$component$compo.uploadOptions,\n              uploadDir = _this$component$compo.uploadDir,\n              fileKey = _this$component$compo.fileKey;\n          var uploadParams = [uploadStorage, file, (0, _utils.uniqueName)(file.name), uploadDir || '', //should pass empty string if undefined\n          function (evt) {\n            return _this.onUploadProgress(evt);\n          }, uploadUrl, uploadOptions, fileKey, null, null];\n\n          var uploadPromise = (_this$fileService = _this.fileService).uploadFile.apply(_this$fileService, uploadParams.concat([function () {\n            return _this.component.emit('fileUploadingStart', uploadPromise);\n          }])).then(function (result) {\n            return _this.fileService.downloadFile(result);\n          }).then(function (result) {\n            return resolve({\n              default: result.url\n            });\n          }).catch(function (err) {\n            console.warn('An Error occured while uploading file', err);\n            reject(err);\n          }).finally(function () {\n            _this.component.emit('fileUploadingEnd', uploadPromise);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {}\n  }, {\n    key: \"onUploadProgress\",\n    value: function onUploadProgress(evt) {\n      if (evt.lengthComputable) {\n        this.loader.uploadTotal = evt.total;\n        this.loader.uploaded = evt.loaded;\n      }\n    }\n  }]);\n\n  return FormioUploadAdapter;\n}();\n\nvar getFormioUploadAdapterPlugin = function getFormioUploadAdapterPlugin(fileService, component) {\n  return function (editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = function (loader) {\n      return new FormioUploadAdapter(loader, fileService, component);\n    };\n  };\n};\n\nexports.getFormioUploadAdapterPlugin = getFormioUploadAdapterPlugin;","map":{"version":3,"sources":["C:/Users/ShyamLakhani/Desktop/my-app/node_modules/formiojs/providers/storage/uploadAdapter.js"],"names":["Object","defineProperty","exports","value","getFormioUploadAdapterPlugin","_utils","require","_nativePromiseOnly","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","prototype","FormioUploadAdapter","loader","fileService","component","upload","_this","file","then","resolve","reject","_this$fileService","_this$component$compo","uploadStorage","uploadUrl","uploadOptions","uploadDir","fileKey","uploadParams","uniqueName","name","evt","onUploadProgress","uploadPromise","uploadFile","apply","concat","emit","result","downloadFile","url","catch","err","console","warn","finally","abort","lengthComputable","uploadTotal","total","uploaded","loaded","editor","plugins","get","createUploadAdapter"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFormioUploadAdapterPlugin = void 0;\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.promise.js\");\n\nrequire(\"core-js/modules/es.promise.finally.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nvar _utils = require(\"../../utils/utils\");\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * UploadAdapter for CKEditor https://ckeditor.com/docs/ckeditor5/latest/framework/guides/deep-dive/upload-adapter.html\n */\nvar FormioUploadAdapter = /*#__PURE__*/function () {\n  function FormioUploadAdapter(loader, fileService, component) {\n    _classCallCheck(this, FormioUploadAdapter);\n\n    this.loader = loader;\n    this.fileService = fileService;\n    this.component = component;\n  }\n\n  _createClass(FormioUploadAdapter, [{\n    key: \"upload\",\n    value: function upload() {\n      var _this = this;\n\n      return this.loader.file.then(function (file) {\n        return new _nativePromiseOnly.default(function (resolve, reject) {\n          var _this$fileService;\n\n          var _this$component$compo = _this.component.component,\n              uploadStorage = _this$component$compo.uploadStorage,\n              uploadUrl = _this$component$compo.uploadUrl,\n              uploadOptions = _this$component$compo.uploadOptions,\n              uploadDir = _this$component$compo.uploadDir,\n              fileKey = _this$component$compo.fileKey;\n          var uploadParams = [uploadStorage, file, (0, _utils.uniqueName)(file.name), uploadDir || '', //should pass empty string if undefined\n          function (evt) {\n            return _this.onUploadProgress(evt);\n          }, uploadUrl, uploadOptions, fileKey, null, null];\n\n          var uploadPromise = (_this$fileService = _this.fileService).uploadFile.apply(_this$fileService, uploadParams.concat([function () {\n            return _this.component.emit('fileUploadingStart', uploadPromise);\n          }])).then(function (result) {\n            return _this.fileService.downloadFile(result);\n          }).then(function (result) {\n            return resolve({\n              default: result.url\n            });\n          }).catch(function (err) {\n            console.warn('An Error occured while uploading file', err);\n            reject(err);\n          }).finally(function () {\n            _this.component.emit('fileUploadingEnd', uploadPromise);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {}\n  }, {\n    key: \"onUploadProgress\",\n    value: function onUploadProgress(evt) {\n      if (evt.lengthComputable) {\n        this.loader.uploadTotal = evt.total;\n        this.loader.uploaded = evt.loaded;\n      }\n    }\n  }]);\n\n  return FormioUploadAdapter;\n}();\n\nvar getFormioUploadAdapterPlugin = function getFormioUploadAdapterPlugin(fileService, component) {\n  return function (editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = function (loader) {\n      return new FormioUploadAdapter(loader, fileService, component);\n    };\n  };\n};\n\nexports.getFormioUploadAdapterPlugin = getFormioUploadAdapterPlugin;"]},"metadata":{},"sourceType":"script"}