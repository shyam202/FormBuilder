{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar base64 = function base64() {\n  return {\n    title: 'Base64',\n    name: 'base64',\n    uploadFile: function uploadFile(file, fileName) {\n      var _this = this;\n\n      var reader = new FileReader();\n      return new _nativePromiseOnly.default(function (resolve, reject) {\n        reader.onload = function (event) {\n          var url = event.target.result;\n          resolve({\n            storage: 'base64',\n            name: fileName,\n            url: url,\n            size: file.size,\n            type: file.type\n          });\n        };\n\n        reader.onerror = function () {\n          return reject(_this);\n        };\n\n        reader.readAsDataURL(file);\n      });\n    },\n    downloadFile: function downloadFile(file) {\n      // Return the original as there is nothing to do.\n      return _nativePromiseOnly.default.resolve(file);\n    }\n  };\n};\n\nbase64.title = 'Base64';\nvar _default = base64;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ShyamLakhani/Desktop/my-app/node_modules/formiojs/providers/storage/base64.js"],"names":["Object","defineProperty","exports","value","default","_nativePromiseOnly","_interopRequireDefault","require","obj","__esModule","base64","title","name","uploadFile","file","fileName","_this","reader","FileReader","resolve","reject","onload","event","url","target","result","storage","size","type","onerror","readAsDataURL","downloadFile","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,kBAAkB,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA/C;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,MAAM,GAAG,SAASA,MAAT,GAAkB;AAC7B,SAAO;AACLC,IAAAA,KAAK,EAAE,QADF;AAELC,IAAAA,IAAI,EAAE,QAFD;AAGLC,IAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,IAApB,EAA0BC,QAA1B,EAAoC;AAC9C,UAAIC,KAAK,GAAG,IAAZ;;AAEA,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,aAAO,IAAIb,kBAAkB,CAACD,OAAvB,CAA+B,UAAUe,OAAV,EAAmBC,MAAnB,EAA2B;AAC/DH,QAAAA,MAAM,CAACI,MAAP,GAAgB,UAAUC,KAAV,EAAiB;AAC/B,cAAIC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAaC,MAAvB;AACAN,UAAAA,OAAO,CAAC;AACNO,YAAAA,OAAO,EAAE,QADH;AAENd,YAAAA,IAAI,EAAEG,QAFA;AAGNQ,YAAAA,GAAG,EAAEA,GAHC;AAINI,YAAAA,IAAI,EAAEb,IAAI,CAACa,IAJL;AAKNC,YAAAA,IAAI,EAAEd,IAAI,CAACc;AALL,WAAD,CAAP;AAOD,SATD;;AAWAX,QAAAA,MAAM,CAACY,OAAP,GAAiB,YAAY;AAC3B,iBAAOT,MAAM,CAACJ,KAAD,CAAb;AACD,SAFD;;AAIAC,QAAAA,MAAM,CAACa,aAAP,CAAqBhB,IAArB;AACD,OAjBM,CAAP;AAkBD,KAzBI;AA0BLiB,IAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBjB,IAAtB,EAA4B;AACxC;AACA,aAAOT,kBAAkB,CAACD,OAAnB,CAA2Be,OAA3B,CAAmCL,IAAnC,CAAP;AACD;AA7BI,GAAP;AA+BD,CAhCD;;AAkCAJ,MAAM,CAACC,KAAP,GAAe,QAAf;AACA,IAAIqB,QAAQ,GAAGtB,MAAf;AACAR,OAAO,CAACE,OAAR,GAAkB4B,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _nativePromiseOnly = _interopRequireDefault(require(\"native-promise-only\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar base64 = function base64() {\n  return {\n    title: 'Base64',\n    name: 'base64',\n    uploadFile: function uploadFile(file, fileName) {\n      var _this = this;\n\n      var reader = new FileReader();\n      return new _nativePromiseOnly.default(function (resolve, reject) {\n        reader.onload = function (event) {\n          var url = event.target.result;\n          resolve({\n            storage: 'base64',\n            name: fileName,\n            url: url,\n            size: file.size,\n            type: file.type\n          });\n        };\n\n        reader.onerror = function () {\n          return reject(_this);\n        };\n\n        reader.readAsDataURL(file);\n      });\n    },\n    downloadFile: function downloadFile(file) {\n      // Return the original as there is nothing to do.\n      return _nativePromiseOnly.default.resolve(file);\n    }\n  };\n};\n\nbase64.title = 'Base64';\nvar _default = base64;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}